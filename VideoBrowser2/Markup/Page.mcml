<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
      xmlns:cor="assembly://MsCorLib/System"
	  xmlns:a="assembly://SamSoft.VideoBrowser/SamSoft.VideoBrowser"
    xmlns:lib="assembly://SamSoft.VideoBrowser/SamSoft.VideoBrowser.LibraryManagement"
	  xmlns:s="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/Styles"
	  xmlns:vm="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/ViewMenu"
	  xmlns:so="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/SortOrder"
    xmlns:me="Me"
      >

	<Aggregate Source="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/Controls"/>
	<Aggregate Source="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/Base"/>

	<UI Name="Page">
		<Properties>
			<a:Application Name="Application" Application="$Required"/>
			<a:ListPage Name="Model" ListPage="$Required"/>
			<lib:FolderItemListMCE Name="FolderItems" FolderItemListMCE="$Required"/>
			<IntRangedValue Name="SortOrderIndex" MinValue ="0" MaxValue="999"/>
		</Properties>

		<Locals>
			<cor:Boolean Name="CanPlay" Boolean="false" />
			<Timer Name="BGTimer" Interval="100" Enabled="false"/>
			<Command Name="ShowViewConfiguration" />
			<Command Name="CloseViewConfiguration" />			
			<Timer Name="RefocusTimer" AutoRepeat="false" Interval="100" /> <!-- this timer is needed to ensure focus stas with the view properties when the viewType changes, doing it not via a timer doesn't always work-->
		</Locals>
		<Rules>

			<Changed Source="[RefocusTimer.Tick]">
				<Actions>
					<Invoke Target="[ViewConfig.NavigateInto]" />
				</Actions>
			</Changed>
			<Changed Source="[ShowViewConfiguration.Invoked]">
				<Actions>
					<Set Target="[ViewConfig.Visible]" Value="true"/>
					<Invoke Target="[ViewConfig.NavigateInto]" />
				</Actions>
			</Changed>
			<Changed Source="[CloseViewConfiguration.Invoked]">
				<Actions>
					<Set Target="[ViewConfig.Visible]" Value="false"/>
					<Invoke Target="[ViewPanel.NavigateInto]" />
				</Actions>
			</Changed>

			<Changed Source="[Model.FolderPrefs.ViewType]" >
				<Conditions>
					<Equality Source="[ViewConfig.Visible]" Value="true" />
				</Conditions>
				<Actions>
					<Invoke Target="[RefocusTimer.Start]" /> <!-- ideally we woud just invoke the NavigateInto here but it doesnt work -->
				</Actions>
			</Changed>

			<!-- Check config file to hide background -->
			<Rule>
				<Conditions>
					<Equality ConditionOp="Equals" Source="[Application.Config.TransparentBackgroundMCML]" Value="true"/>
				</Conditions>
				<Actions>
					<Set Target="[MainBG.Visible]" Value="false" />
				</Actions>
			</Rule>


			<Rule>
				<Actions>
					<Set Target="[BGTimer.Enabled]" Value="true" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Equality Source="[Model.HasBanner]" ConditionOp="Equals" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[BreadCrumbs.Font]" Value="Segoe Media Center Light, 36" />
					<Set Target="[BreadCrumbs.Margins]" Value="0,20,0,0" />
				</Actions>
			</Rule>

			<Rule ConditionLogicalOp="And">
				<Conditions>
					<Equality Source="[Model.HasBanner]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Model.BreadCrumbs]" ConditionOp="Equals" Value="" />
				</Conditions>
				<Actions>
					<Set Target="[BreadCrumbs.Content]" Value="video library" />
					<Set Target="[BreadCrumbs.Font]" Value="Segoe Media Center Light, 36" />
				</Actions>
			</Rule>

			<Changed Source="[BGTimer.Tick]">
				<Actions>
					<Set Target="[CanPlay]" Value="[Application.CanPlayStartup]" />
					<Set Target="[BGTimer.Enabled]" Value="false" />
				</Actions>
			</Changed>

			<Changed Source="[CanPlay]" >
				<Conditions>
					<Equality Source="[CanPlay]" ConditionOp="Equals" Value="true" />
				</Conditions>
				<Actions>
					<PlayAnimation Animation="animation://me:BackgroundFadeIn" Target="[MainBG]" />
					<!--<Set Target="[MainBG.Alpha]" Value="1" />-->
				</Actions>
			</Changed>
		
			<Changed Source="[FolderItems.SelectedIndex.Value]" InitialEvaluate="true">
				<Conditions>
					<Equality ConditionOp="NotEquals" Source="[FolderItems.SelectedIndex.Value]" Value="-1"></Equality>
				</Conditions>
				<Actions>
					<Set Target="[Application.CurrentIndex]" Value="[FolderItems.SelectedIndex.Value]"/>
				</Actions>
			</Changed>
			
			<Changed Source="[Application.FindText]" InitialEvaluate="false">
				<Conditions>
					<Equality Source="[Application.JILtext.Value]" ConditionOp="NotEquals" Value=""/>
				</Conditions>
				<Actions>
					<Set Target="[FindAsYouTypePanel.Visible]" Value="true"/>
					<Set Target="[FindAsYouType.Content]" Value="[Application.FindText]"/>
					<Set Target="[ShadowLabel.Content]" Value="[Application.FindText]" />
				</Actions>
			</Changed>

			<Changed Source="[Application.FindText]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[Application.JILtext.Value]" ConditionOp="Equals" Value=""/>
				</Conditions>
				<Actions>
					<Set Target="[FindAsYouTypePanel.Visible]" Value="false"/>
					<Set Target="[FindAsYouType.Content]" Value="[Application.FindText]"/>
					<Set Target="[ShadowLabel.Content]" Value="[Application.FindText]" />
				</Actions>
			</Changed>
		</Rules>


		<Content>
			<Panel Layout="Center">
				<Children>
					<Clip Layout="Form" Padding="[Application.Config.OverScanPaddingMcml]" Scale="[Application.Config.OverScanScalingMcml]" CenterPointPercent="0.5,0.5,0.5">
						<Children>

							<vm:ViewsButton Name="ViewsBtn" Command="[ShowViewConfiguration]">
								<LayoutInput>
									<FormLayoutInput Left="Parent,0,50" Bottom="SortOrderUI,0"/>
								</LayoutInput>
							</vm:ViewsButton>

							<vm:ViewConfiguration Name="ViewConfig" Visible="false" Prefs="[Model.FolderPrefs]" Close="[CloseViewConfiguration]">
								<LayoutInput>
									<FormLayoutInput Left="Parent,0,50" Top="ViewsBtn,1"/>
								</LayoutInput>
							</vm:ViewConfiguration>
							
							<!-- find in list panel - highest Z-Order -->
							<Panel Name="FindAsYouTypePanel" >
								<LayoutInput>
									<FormLayoutInput Bottom="Parent,1,-30" Right="Parent,1,-30"/>
								</LayoutInput>
								<Layout>
									<FlowLayout ItemAlignment="Center"/>
								</Layout>
								<Children>
									<ColorFill Content="Transparent" Padding="8,0,8,-3" Layout="Anchor">
										<Children>
											<Text Name="FindAsYouType" Font="Segoe Media Center Semibold,150" Content="" Color="color://me:LightBlue"  />
											<!-- Shadow - Confirmed text (opaque) -->
											<!--<Text Name="ShadowLabel" Content="Fred" Color="255, 0, 0, 0" Font="Segoe Media Center Semibold,150">-->
											<Text Name="ShadowLabel" Content="" Color="255, 0, 0, 0" Font="Segoe Media Center Semibold,150">
												<LayoutInput>
													<AnchorLayoutInput Top="FindAsYouType, 0, 2" Left="FindAsYouType, 0, 2"/>
												</LayoutInput>
											</Text>
										</Children>
									</ColorFill>
								</Children>
							</Panel>

							<!-- Black Overlay to Fade Out contents -->
							<!--
							<Panel Name="FadeOutPanel" Visible="false">
								<LayoutInput>
									<FormLayoutInput Left="Parent,0" Top="Parent,.11" Right="Parent,1" Bottom="Parent,1"/>
								</LayoutInput>
								<Children>
									<ColorFill Content="Black" Alpha="0"/>
								</Children>
							</Panel>
							-->

							<!--Banner / Breadcrumbs -->
							<Panel Name="Breadcrumbs">
								<Layout>
									<FlowLayout Orientation="Vertical" ItemAlignment="Far"/>
								</Layout>
								<Children>
									<Graphic Content="[Model.Banner]" MaintainAspectRatio="true" MaximumSize="600,90">
									</Graphic>
									<Clip FadeSize="40" Orientation="Vertical" FadeAmount="0.7" NearOffset="-25" CenterPointPercent="-100,-100,0">
										<Children>
											<Text Name="BreadCrumbs" Content="[Model.BreadCrumbs]" Font="Segoe Media Center Light, 16" Color="color://me:MediumBlue">
											</Text>
										</Children>
									</Clip>
								</Children>
								<LayoutInput>
									<FormLayoutInput Right="Parent,1,-40" Top="Parent,0,10"  />
								</LayoutInput>
							</Panel>
						
							<!-- Sort Order Controls -->
							<me:SortOrder Name="SortOrderUI" List="[FolderItems.SortOrders]">
								<LayoutInput>
									<FormLayoutInput Left="Parent,0,40" Bottom="ViewPanel,0" Right="Parent,1,-40"/>
								</LayoutInput>
							</me:SortOrder>

							<!--  View Details-->
							<me:DetailArea Name="ViewPanel" Model="[Model]" Application="[Application]" FolderItems="[FolderItems]" >
								<LayoutInput>
									<FormLayoutInput Left="Parent,.0" Top="Parent,0,130" Bottom="Parent,1" Right="Parent,1"/>
								</LayoutInput>
							</me:DetailArea>

							<!-- Now Playing View -->
							<me:NowPlayingViewport>
								<LayoutInput>
									<FormLayoutInput Left="Parent,0,10" Bottom="Parent,1,-10" />
								</LayoutInput>
							</me:NowPlayingViewport>
							
							
						</Children>
					</Clip>
					<Graphic Name="MainBG" Content="image://me:Background" Margins="-50,-20,-150,-20" Layout="Fill"  />
				</Children>
			</Panel>
		</Content>
	</UI>

	<UI Name="DetailArea">
		<Properties>
			<a:Application Name="Application" Application="$Required"/>
			<a:ListPage Name="Model" ListPage="$Required"/>
			<lib:FolderItemListMCE Name="FolderItems" FolderItemListMCE="$Required"/>
		</Properties>
	

		<Rules>
			<Condition Source="[Input.DeepKeyFocus]" SourceValue="false" ConditionOp="Equals">
				<Actions>
					<Set Target="[MainPanel.Alpha]" Value="0.2" />
				</Actions>
			</Condition>

			<Condition Source="[Input.DeepKeyFocus]" SourceValue="true" ConditionOp="Equals">
				<Actions>
					<Set Target="[MainPanel.Alpha]" Value="1" />
				</Actions>
			</Condition>
			
			
			<Condition Source="[Model.FolderPrefs.ViewTypeString]" ConditionOp="Equals" SourceValue="Detail" Target="[DetailsView.Visible]" Value="true" />
			<Condition Source="[Model.FolderPrefs.ViewTypeString]" ConditionOp="NotEquals" SourceValue="Detail" Target="[DetailsView.Visible]" Value="false" />
			<Condition Source="[Model.FolderPrefs.ViewTypeString]" ConditionOp="Equals" SourceValue="Poster" Target="[PosterView.Visible]" Value="true" />
			<Condition Source="[Model.FolderPrefs.ViewTypeString]" ConditionOp="NotEquals" SourceValue="Poster" Target="[PosterView.Visible]" Value="false" />
			<Condition Source="[Model.FolderPrefs.ViewTypeString]" ConditionOp="Equals" SourceValue="Thumb" Target="[ThumbView.Visible]" Value="true" />
			<Condition Source="[Model.FolderPrefs.ViewTypeString]" ConditionOp="NotEquals" SourceValue="Thumb" Target="[ThumbView.Visible]" Value="false" />
		</Rules>

		<Content>
			<Panel Name="MainPanel" Layout="Anchor">
				<Animations>
					<Animation Animation="animation://me:AlphaAnimation"/>
				</Animations>
				<Children>
					<me:ViewDetails Name="DetailsView" Visible="true" Model="[Model]" Application="[Application]" FolderItems="[FolderItems]">
						<LayoutInput>
							<AnchorLayoutInput Horizontal="Fill" Top="Parent,0" Bottom="Parent,0.9"/>
						</LayoutInput>
					</me:ViewDetails>

					<me:PosterView Name="PosterView" Visible="true" Application="[Application]" FolderItems="[FolderItems]" Prefs="[Model.FolderPrefs]" >
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,.0" Top="Parent,0" Bottom="Parent,1" Right="Parent,1"/>
						</LayoutInput>
					</me:PosterView>

					<me:ThumbDetailsView Name="ThumbView" Visible="true" Application="[Application]" FolderItems="[FolderItems]" Prefs="[Model.FolderPrefs]" >
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,.0" Top="Parent,0" Bottom="Parent,.95" Right="Parent,1"/>
						</LayoutInput>
					</me:ThumbDetailsView>
				</Children>

			</Panel>
		</Content>

	</UI>

	<Animation Name="AlphaAnimation" Type="Alpha">
		<Keyframes>
			<AlphaKeyframe Time="0.0"  RelativeTo="Current" Interpolation="EaseIn"/>
			<AlphaKeyframe Time="0.1"  RelativeTo="Final"/>
		</Keyframes>
	</Animation>
</Mcml>