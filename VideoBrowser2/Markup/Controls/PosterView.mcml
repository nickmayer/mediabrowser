<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:cor="assembly://MSCorLib/System"
	  xmlns:r="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/RepeatItem"
	  xmlns:a="assembly://SamSoft.VideoBrowser/SamSoft.VideoBrowser"
	  xmlns:lib="assembly://SamSoft.VideoBrowser/SamSoft.VideoBrowser.LibraryManagement"
	  xmlns:me="Me"
	  xmlns:s="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/Styles"
	  xmlns:sr="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/StarRating"
	  xmlns:ui="assembly://Microsoft.MediaCenter.UI/Microsoft.MediaCenter.UI"
	  xmlns:st="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/ScrollableText"
	  xmlns:i="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/Images"
	  xmlns:shell="assembly://Microsoft.MediaCenter.UI/Microsoft.MediaCenter.Shell"
  >

	<Aggregate Source="resx://SamSoft.VideoBrowser/SamSoft.VideoBrowser.Resources/StarRating"/>

	<UI Name="PosterView">
		<Properties>
			<a:Application Name="Application" Application="$Required"/>
			<lib:FolderItemListMCE Name="FolderItems" FolderItemListMCE="$Required"/>
			<lib:FolderItemListPrefs Name="Prefs" FolderItemListPrefs="$Required" />
		</Properties>

		<Locals>
			<FormLayoutInput Name="TitleLayout" Top="ItemPanel,1"  Left="Focus,0,20"/>
		</Locals>
		<Rules>
			<Condition Source="[Prefs.VerticalScroll]" SourceValue="true" Target="[TitleLayout.Left]" Value="Parent,0,150" />
			<Condition Source="[Prefs.VerticalScroll]" SourceValue="false" Target="[TitleLayout.Left]" Value="Focus,0,20" />
		</Rules>
		<Content>
			<Panel Layout="Form">
				<Children>
					<me:PosterScroller Name="ItemPanel" Application="[Application]" VerticalScroll="[Prefs.VerticalScrollChoice]" 
									   FolderItems="[FolderItems]" ShowLabels="[Prefs.ShowLabelsChoice]" 
									   ItemSize="[FolderItems.ActualThumbSize]">
						<LayoutInput>
							<FormLayoutInput Left="Parent,.06" Top="Parent,0.0,10" Bottom="Parent,1,-80" Right="Parent,0.94"/>
						</LayoutInput>
					</me:PosterScroller>
					<ColorFill Content="White" Alpha="0.1">
						<LayoutInput>
							<FormLayoutInput Left="Parent,.0" Top="ItemPanel,0.0,-10" Bottom="ItemPanel,1" Right="Parent,1"/>
						</LayoutInput>
					</ColorFill>

					<me:ItemTitle FolderItems="[FolderItems]" LayoutInput="[TitleLayout]">
						<Animations>
							<Animation Type="Move">
								<Keyframes>
									<PositionKeyframe Time="0" RelativeTo="Current"/>
									<PositionKeyframe Time="0.3" RelativeTo="Final"/>
								</Keyframes>
							</Animation>
						</Animations>
					</me:ItemTitle>
				</Children>
			</Panel>
		</Content>
	</UI>

	<UI Name="ThumbDetailsView">
		<Properties>
			<a:Application Name="Application" Application="$Required"/>
			<lib:FolderItemListMCE Name="FolderItems" FolderItemListMCE="$Required"/>
			<lib:FolderItemListPrefs Name="Prefs" FolderItemListPrefs="$Required" />
		</Properties>

		<Locals>
			<lib:IFolderItem Name="SelectedItem" IFolderItem="[FolderItems.SelectedItem]" />
			<lib:IFolderItem Name="PreSelectedItem" IFolderItem="[FolderItems.SelectedItem]" />
			<lib:IFolderItem Name="BlankItem"  IFolderItem="[FolderItems.BlankItem]"/>
			<Timer Name="FullDetailsTimer" Interval="300" AutoRepeat="false"/>

			<cor:Int32 Name="CurrentItemIndex" Int32="0"/>
			<BooleanChoice Name="Vertical" Value="false" />
			<FormLayoutInput Name="MyLayout" Left="Parent,.06" Top="Parent,0.0" Bottom="Parent,0,210" Right="Parent,0.94"/>
		</Locals>
		<Rules>

			<Changed Source="[FolderItems.SelectedIndex.Value]" InitialEvaluate="true">
				<Conditions>
					<Equality ConditionOp="NotEquals" Source="[FolderItems.SelectedIndex.Value]" Value="-1"></Equality>
				</Conditions>
				<Actions>
					<Invoke Target="[FullDetailsTimer.Stop]" />
					<Invoke Target="[FullDetailsTimer.Start]" />
					<Set Target="[SelectedItem]"  Value="[BlankItem]" />
					<Set Target="[PreSelectedItem]"  Value="[FolderItems.SelectedItem]" />
					<Set Target="[Splitter.Visible]" Value="false" />
				</Actions>
			</Changed>

			<Changed Source="[FullDetailsTimer.Tick]">
				<Actions>
					<Set Target="[SelectedItem]" Value="[PreSelectedItem]"/>
					<Set Target="[Splitter.Visible]" Value="true" />
				</Actions>
			</Changed>

			<Binding Source="[SelectedItem]" Target="[Poster.Model]"/>
			<Binding Source="[SelectedItem]" Target="[TitleSet.Model]"/>
			<Binding Source="[SelectedItem]" Target="[MovieInfo.Model]"/>
			<Binding Source="[SelectedItem]" Target="[Summary.Model]"/>
			<Binding Source="[SelectedItem]" Target="[LastWatched.Model]"/>
			<Binding Source="[PreSelectedItem]" Target="[Poster.ModelFast]"/>
			<Binding Source="[PreSelectedItem]" Target="[TitleSet.ModelFast]"/>
			<Binding Source="[PreSelectedItem]" Target="[MovieInfo.ModelFast]"/>
			<Binding Source="[PreSelectedItem]" Target="[Summary.ModelFast]"/>
			<Binding Source="[PreSelectedItem]" Target="[LastWatched.ModelFast]"/>

			<Binding Source="[FolderItems.Count]" Target="[TotalItems.Content]">
				<Transformer>
					<FormatTransformer Format="{0}"	/>
				</Transformer>
			</Binding>

			<Binding Source="[FolderItems.SelectedIndex.Value]" Target="[CurrentItemIndex]">
				<Transformer>
					<MathTransformer Add="1"/>
				</Transformer>
			</Binding>

			<Binding Source="[CurrentItemIndex]" Target="[CurrentItem.Content]">
				<Transformer>
					<FormatTransformer Format="{0}"	/>
				</Transformer>
			</Binding>
			<Default Target="[MyLayout.Bottom.Offset]" Value="[FolderItems.ActualThumbSize.Value.Height]">
						<Transformer>
							<MathTransformer Add="50"/>
						</Transformer>
			</Default>
			<Changed Source="[FolderItems.ActualThumbSize.Value]">
				<Actions>
					<Set Target="[MyLayout.Bottom.Offset]" Value="[FolderItems.ActualThumbSize.Value.Height]">
						<Transformer>
							<MathTransformer Add="50"/>
						</Transformer>
					</Set>
				</Actions>
			</Changed>
		</Rules>
		<Content>
			<Panel Layout="Form">
				<Children>
					<me:PosterScroller RowLimit="1" Name="ItemPanel" VerticalScroll="[Vertical]" 
									   ItemSize="[FolderItems.ActualThumbSize]" 
									   Application="[Application]" FolderItems="[FolderItems]" 
									   ShowLabels="[Prefs.ShowLabelsChoice]" LayoutInput="[MyLayout]">
						
					</me:PosterScroller>
					<ColorFill Content="White" Alpha="0.1">
						<LayoutInput>
							<FormLayoutInput Left="Parent,.0" Top="ItemPanel,0.0" Bottom="ItemPanel,1" Right="Parent,1"/>
						</LayoutInput>
					</ColorFill>

					<Panel Name="Details" Layout="Form">
						<LayoutInput>
							<FormLayoutInput Left="Parent,.05" Top="ItemPanel,1,10" Bottom="Parent,0.95" Right="Parent,0.95"/>
						</LayoutInput>
						<Children>
							<me:TitleSet Name="TitleSet" Model="[SelectedItem]" ModelFast="[PreSelectedItem]">
								<LayoutInput>
									<FormLayoutInput Left="Parent,0" Top="Parent,0.0" Right="Parent,0.6"/>
								</LayoutInput>
							</me:TitleSet>
							<Panel Layout="HorizontalFlow">
								<LayoutInput>
									<FormLayoutInput Top="Parent,0.0" Right="Parent,1"/>
								</LayoutInput>
								<Children>
									<Text Content="-1" Name="CurrentItem" Color="color://i:LightBlue" Font="Segoe Media Center, 16"></Text>
									<Text Content=" | "  Color="color://i:LightBlue" Font="Segoe Media Center, 16"></Text>
									<Text Content="-1" Name="TotalItems" Color="color://i:LightBlue" Font="Segoe Media Center, 16"></Text>
								</Children>
							</Panel>

							<me:LastWatched Name="LastWatched" Model="[SelectedItem]" ModelFast="[PreSelectedItem]">
								<LayoutInput>
									<FormLayoutInput Left="Parent,0" Top="TitleSet,1.0" Right="Parent,0.3"/>
								</LayoutInput>
							</me:LastWatched>
							<me:ItemPoster Name="Poster" Model="[SelectedItem]" ModelFast="[PreSelectedItem]">
								<LayoutInput>
									<FormLayoutInput Left="Parent,.0" Top="LastWatched,1" Bottom="Parent,1" Right="Parent,0.3"/>
								</LayoutInput>
							</me:ItemPoster>

							<me:Summary Name="Summary" Model="[SelectedItem]"  ModelFast="[PreSelectedItem]">
								<LayoutInput>
									<FormLayoutInput Left="Poster,1,10" Top="TitleSet,1" Right="MovieInfo,0,-14" Bottom="Parent,1"></FormLayoutInput>
								</LayoutInput>
							</me:Summary>
							<ColorFill Content="White" Name="Splitter" Alpha="0.5">
								<LayoutInput>
									<FormLayoutInput Left="MovieInfo,0,-6" Right="MovieInfo,0,-4" Bottom="MovieInfo,1" Top="MovieInfo,0" />
								</LayoutInput>
							</ColorFill>
							<me:MovieInfo Name="MovieInfo" Model="[SelectedItem]" ModelFast="[PreSelectedItem]" >
								<LayoutInput>
									<FormLayoutInput Left="Parent,0.75" Top="TitleSet,1" Right="Parent,1" Bottom="Parent,1"></FormLayoutInput>
								</LayoutInput>
							</me:MovieInfo>
						</Children>
					</Panel>
				</Children>
			</Panel>
		</Content>
	</UI>

	<UI Name="Summary">
		<Properties>
			<lib:IFolderItem Name="Model" IFolderItem="$Required"/>
			<lib:IFolderItem Name="ModelFast" IFolderItem="$Required"/>
		</Properties>
		<Rules>
			<Binding Source="[Model.Overview]" Target="[Summary.Text]" />
			<Changed Source="[Model]">
				<Conditions>
					<Equality Source="[Model.Overview.Length]" ConditionOp="Equals" Value="0"/>
				</Conditions>
				<Actions>
					<Set Target="[Summary.Visible]" Value="false"/>
				</Actions>
			</Changed>
			<Changed Source="[Model]">
				<Conditions>
					<Equality Source="[Model.Overview.Length]" ConditionOp="NotEquals" Value="0"/>
				</Conditions>
				<Actions>
					<Set Target="[Summary.Visible]" Value="true"/>
				</Actions>
			</Changed>
		</Rules>
		<Content>
			<Panel >
				<Children>
					<st:ScrollableText Visible="false" Name="Summary" >
					</st:ScrollableText>
				</Children>
			</Panel>
		</Content>
	</UI>

	<UI Name="TitleSet">
		<Properties>
			<lib:IFolderItem Name="Model" IFolderItem="$Required"/>
			<lib:IFolderItem Name="ModelFast" IFolderItem="$Required"/>
		</Properties>
		<Rules>
			<Binding Target="[Title1.Content]" Source="[ModelFast.Description]"/>
			<Binding Target="[Title2.Content]" Source="[ModelFast.Title2]"/>
		</Rules>
		<Content>
			<Panel Name="UpperSection" Layout="VerticalFlow">
				<Children>
					<Text Name="Title1" Color="White" Font="Segoe Media Center Semibold,20"></Text>
					<Text Name="Title2" Color="White" Font="Segoe Media Center, 18" Margins="0,-5,0,0"></Text>
				</Children>
			</Panel>
		</Content>
	</UI>

	<UI Name="LastWatched">
		<Properties>
			<lib:IFolderItem Name="Model" IFolderItem="$Required"/>
			<lib:IFolderItem Name="ModelFast" IFolderItem="$Required"/>
		</Properties>
		<Rules>
			<Binding Target="[LastWatched.Content]" Source="[Model.LastWatched]"/>
			<Changed Source="[Model]">
				<Conditions>
					<Equality Source="[Model.LastWatched.Length]" ConditionOp="Equals" Value="0"/>
				</Conditions>
				<Actions>
					<Set Target="[LastWatched.Visible]" Value="false" />
				</Actions>
			</Changed>
			<Changed Source="[Model]">
				<Conditions>
					<Equality Source="[Model.LastWatched.Length]" ConditionOp="GreaterThan" Value="0"/>
				</Conditions>
				<Actions>
					<Set Target="[LastWatched.Visible]" Value="true" />
				</Actions>
			</Changed>
		</Rules>
		<Content>
			<Panel>
				<Children>
					<Text Name="LastWatched" Color="White" Font="Segoe Media Center,14"></Text>
				</Children>
			</Panel>
		</Content>
	</UI>


	<UI Name="ItemPoster">
		<Properties>
			<lib:IFolderItem Name="Model" IFolderItem="$Required"/>
			<lib:IFolderItem Name="ModelFast" IFolderItem="$Required"/>
		</Properties>
		<Rules>
			<Binding Source="[Model.MCMLThumb]" Target="[Thumb.Content]" />

		</Rules>
		<Content>
			<Panel Layout="Form">
				<Children>
					<Graphic Name="Thumb" MaintainAspectRatio="true">
						<LayoutInput>
							<FormLayoutInput Horizontal="Center" Vertical="Near"/>
						</LayoutInput>
					</Graphic>
				</Children>
			</Panel>
		</Content>
	</UI>

	<UI Name="MovieInfo">
		<Properties>
			<lib:IFolderItem Name="Model" IFolderItem="$Required"/>
			<lib:IFolderItem Name="ModelFast" IFolderItem="$Required"/>
		</Properties>
		<Rules>
			<Binding Target="[StarRating.Value]" Source="[Model.IMDBRating]" />
			<Binding Target="[TxtRuntime.Content]" Source="[Model.RunningTimeString]"/>
			<Binding Target="[GenreRepeater.Source]" Source="[Model.Genres]"/>
		</Rules>
		<Content>
			<Panel Name="MainPanel">
				<Layout>
					<FlowLayout  Orientation="Vertical" Spacing="0,0" />
				</Layout>
				<Children>
					<Text Name="TxtRuntime" Color="color://i:LightBlue" WordWrap="true" Font="Segoe Media Center,14" Margins="0,0,0,0"/>
					<sr:StarRating Name="StarRating" />
					<Repeater Name="GenreRepeater"  >
						<Layout>
							<FlowLayout Orientation="Horizontal" AllowWrap="true" Spacing="25,0"/>
						</Layout>
						<Divider>
							<Text Content="●" Font="Segoe Media Center,14" Color="color://i:LightBlue" Alpha="0.6"  />
						</Divider>
						<Content>
							<Text Content="[RepeatedItem!cor:String]" Font="Segoe Media Center,14" Color="color://i:LightBlue" />
						</Content>
					</Repeater>

				</Children>
			</Panel>
		</Content>
	</UI>

	<UI Name="PosterScroller">

		<Properties>
			<a:Application Name="Application" Application="$Required"/>
			<lib:FolderItemListMCE Name="FolderItems" FolderItemListMCE="$Required"/>
			<BooleanChoice Name="ShowLabels" BooleanChoice="$Required" />
			<BooleanChoice Name="VerticalScroll" BooleanChoice="$Required" />
			<cor:Int32 Name="RowLimit"  />
			<lib:SizeRef Name="ItemSize" Value="10,10" />
		</Properties>
		<Locals>

			<!-- Use the MouseWheel handler to handle the mouse wheel.  -->
			<ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true"
							  HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>

			<ScrollingData Name="VScrollingData" />
			<ScrollingData Name="HScrollingData" EndPaddingRelativeTo="Far" EndPadding="400" BeginPadding="100" BeginPaddingRelativeTo="Near"/>
			<ScrollingData Name="ScrollingData" />
			<!-- and triple tap for tripletap navigation -->
			<TypingHandler Name="Typer" HandlerStage="Bubbled" MaxLength="3" TypingPolicy="Default"/>

			<Timer Name="ClearTripleTypeTimer" AutoRepeat="true" Interval="1000" Enabled="false"/>

			<Environment Name="Environment" />

			<GridLayout Name="MyLayout" Repeat="WhenTooBig" RepeatGap="100" Orientation="Vertical" Rows="[RowLimit]" Columns="0" 
						AllowWrap="true" Spacing="[Application.Config.GridSpacingMcml]" MinorAlignment="Center" MajorAlignment="Center" />

			<ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled"/>
			<ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled"/>
			<IntRangedValue Name="NavCount" Value="0" />
			
			<cor:UInt32 Name="NormalKeyRepeat" UInt32="250"/><!-- This must be less than anim delay -->
			
			<cor:UInt32 Name="FastKeyRepeat" UInt32="150"/>
			
			<cor:Int32 Name="AnimDelay" Int32="300" /><!-- This must be greater than NormalKeyRepeat-->
			
			<cor:Int32 Name="SpeedUpDelay" Int32="2"/><!--The number of items to got across at normal speed before speeding up -->
			<FormLayoutInput Name="HLayout" Horizontal="Fill" Vertical="Center"/>
			<FormLayoutInput Name="VLayout" Horizontal="Center" Vertical="Fill"/>
		</Locals>


		<Rules>
			<Binding Source="[FolderItems.ReferenceSize]" Target="[MyLayout.ReferenceSize]"/>
			<Condition Source="[VerticalScroll.Value]" SourceValue="true">
				<Actions>
					<Set Target="[Scroller.Orientation]" Value="Vertical" />
					<Set Target="[MyLayout.Orientation]" Value="Horizontal" />
					<Set Target="[MyLayout.Rows]" Value="0" />
					<Set Target="[ItemPanel.Padding]" Value="0,50,0,50" />
					<Set Target="[Scroller.LayoutInput]" Value="[VLayout]" />
					<Set Target="[MyLayout.Repeat]" Value="Never" />
					<Set Target="[MyLayout.RepeatGap]" Value="0" />
					<Set Target="[ScrollingData]" Value="[VScrollingData]" />
				</Actions>
			</Condition>
			<Condition Source="[VerticalScroll.Value]" SourceValue="false">
				<Actions>
					<Set Target="[Scroller.Orientation]" Value="Horizontal" />
					<Set Target="[MyLayout.Orientation]" Value="Vertical" />
					<!--<Set Target="[MyLayout.Rows]" Value="[RowLimit]" />-->
					<Set Target="[ItemPanel.Padding]" Value="0,0,0,0" />
					<Set Target="[Scroller.LayoutInput]" Value="[HLayout]" />
					<Set Target="[MyLayout.Repeat]" Value="WhenTooBig" />
					<Set Target="[MyLayout.RepeatGap]" Value="100" />
					<Set Target="[ScrollingData]" Value="[HScrollingData]" />
				</Actions>
			</Condition>

			<Rule>
				<Conditions>
					<Equality Source="[FolderItems.Count]" ConditionOp="LessThanOrEquals"  Value="4"/>
					<Equality Source="[VerticalScroll.Value]" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[MyLayout.Rows]" Value="1" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Equality Source="[FolderItems.Count]" ConditionOp="GreaterThan"  Value="4"/>
					<Equality Source="[VerticalScroll.Value]" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[MyLayout.Rows]" Value="[RowLimit]" />
				</Actions>
			</Rule>


			<Rule>
				<Conditions>
					<Modified Source="[JumpForward.Invoked]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[ScrollingData.PageDown]"/>
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Modified Source="[JumpBack.Invoked]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[ScrollingData.PageUp]"/>
				</Actions>
			</Rule>

			<Binding Source="[Application.JILtext]" Target="[Typer.EditableText]"/>

			<Changed Source="[Application.JILtext.Value]">
				<Conditions>
					<Equality Source="[Application.JILtext.Value]" ConditionOp="NotEquals" Value=""/>
				</Conditions>
				<Actions>
					<Invoke Target="[Application.JILtext.Submit]"/>
					<Invoke Target="[ClearTripleTypeTimer.Stop]"/>
					<Invoke Target="[ClearTripleTypeTimer.Start]"/>
					<Set Target="[ClearTripleTypeTimer.Enabled]" Value="true"/>
				</Actions>
			</Changed>

			<Changed Source="[ClearTripleTypeTimer.Tick]">
				<Actions>
					<Set Target="[Application.JILtext.Value]" Value=""/>
					<Invoke Target="[Application.JILtext.Submit]"/>
					<Set Target="[ClearTripleTypeTimer.Enabled]" Value="false"/>
				</Actions>
			</Changed>

			<Changed Source="[Application.JILindex]">
				<Actions>
					<Invoke Target="[ScrollingData.Scroll]" amount="[Application.JILindex]"/>
				</Actions>
			</Changed>

			<Rule ConditionLogicalOp="And">
				<Conditions>
					<Modified Source="[Application]" InitialEvaluate="true"/>
					<Equality Source="[Application.NavigatingForward]" Value="true"/>
					<Equality Source="[FolderItems.Count]" ConditionOp="GreaterThan" Value="0" />
				</Conditions>

				<Actions>
					<Invoke Target="[MyRepeater.NavigateIntoIndex]"  index="[FolderItems.SelectedIndex.Value]"/>
				</Actions>
			</Rule>

			<Changed Source="[Application]" InitialEvaluate="true">
				<Actions>
					<Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
				</Actions>
			</Changed>

			<Changed Source="[NavCount.Value]">
				<Conditions>
					<Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="[SpeedUpDelay]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[FastKeyRepeat]" />
				</Actions>
			</Changed>

			<Changed Source="[NavCount.Value]">
				<Conditions>
					<Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="0"/>
				</Conditions>
				<Actions>
					<Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
				</Actions>
			</Changed>

			<!-- Give ScrollingData to ScrollingHandler. -->
			<Binding Target="[ScrollingHandler.ScrollingData]" Source="[ScrollingData]"/>
			<Binding Target="[Scroller.ScrollingData]" Source="[ScrollingData]" />
			<!-- Give Repeater to ScrollingData. -->
			<Default Target="[ScrollingData.Repeater]" Value="[MyRepeater]"/>
			<Default Target="[FocusRect.Scaling]" Value="[FolderItems.SelectedItem.PosterZoom]" />
			<Binding Target="[FocusRect.Scaling]" Source="[FolderItems.SelectedItem.PosterZoom]" />
			<Changed Source="[FolderItems.SelectedItem]">
				<Actions>
					<Set Target="[FocusRect.Scaling]" Value="[FolderItems.SelectedItem.PosterZoom]" />
				</Actions>
			</Changed>
		</Rules>

		<Content>
			<Panel Name="ItemPanel" Layout="Form" Navigation="ContainHorizontal" >
				<Children>
					<me:FocusSelector Name="FocusRect">
						<LayoutInput>
							<FormLayoutInput Left="Focus,0,-3" Right="Focus,1,3"
											 Top="Focus,0,-3" Bottom="Focus,1,3"
											 ContributesToHeight="false"
											 ContributesToWidth="false"/>
						</LayoutInput>
						<Animations>
							<Animation Animation="animation://me:SizeAnimation"/>
							<Animation Animation="animation://me:MoveAnimation"/>
						</Animations>
					</me:FocusSelector>
					<Scroller Orientation="Horizontal" FadeSize="-50" Name="Scroller" Navigation="RememberFocus,Group" ScrollingData="[ScrollingData]">
						<Children>
							<Repeater Source="[FolderItems]" Name="MyRepeater" ContentName="BaseItem" Layout="[MyLayout]" DiscardOffscreenVisuals="false" >
								<Animations>
									<Animation Type="Move">
										<Keyframes>
											<PositionKeyframe Time="0" RelativeTo="Current"/>
											<PositionKeyframe Time="0.15" RelativeTo="Final"/>
										</Keyframes>
									</Animation>
								</Animations>
							</Repeater>
						</Children>
						<LayoutInput>
							<FormLayoutInput Horizontal="Fill" Vertical="Center"/>
						</LayoutInput>
					</Scroller>
				</Children>
			</Panel>
		</Content>
		<Content Name="BaseItem">
			<me:ListItem ImageSize="[ItemSize]" AnimDelay="[AnimDelay]" NavCount="[NavCount]" ShowLabels="[ShowLabels]" Application="[Application]" Index="[RepeatedItemIndex]" Model="[RepeatedItem!lib:BaseFolderItem]" FolderItems="[FolderItems]">
			</me:ListItem>
		</Content>
	</UI>

	<UI Name="ItemTitle">
		<Properties>
			<lib:FolderItemListMCE Name="FolderItems" FolderItemListMCE="$Required"/>
		</Properties>
		

		<Rules>
			<Changed Source="[FolderItems.SelectedIndex.Value]" InitialEvaluate="true">
				<Conditions>
					<Equality ConditionOp="NotEquals" Source="[FolderItems.SelectedIndex.Value]" Value="-1"></Equality>
				</Conditions>
				<Actions>
					<Set Target="[Name.Content]" Value="[FolderItems.SelectedItem.Description]"/>
					<Set Target="[Runtime.Content]" Value="[FolderItems.SelectedItem.RunningTimeString]"/>
					<Set Target="[StarRating.Value]" Value="[FolderItems.SelectedItem.IMDBRating]" />
				</Actions>
			</Changed>
		</Rules>

		<Content>
			<Panel Margins="0,0,15,0">
				<Layout>
					<ScaleLayout AllowScaleDown="true" AllowScaleUp="false" MaintainAspectRatio="true"/>
				</Layout>
				<Children>
					<Panel>
						<Layout>
							<FlowLayout Orientation="Vertical" Spacing="0,0"/>
						</Layout>
						<Children>
							<Text Name="Name" Content="" Color="White" Font="Segoe Media Center,26"></Text>
							<Panel>
								<Layout>
									<FlowLayout Orientation="Horizontal" Spacing="15,0"/>
								</Layout>
								<Children>
									<Text Name="Runtime" Content="" Color="color://me:MediumBlue" Font="Segoe Media Center,18" Margins="0,-10,0,0"></Text>
									<me:StarRating Name="StarRating" Value="-1" Margins="0,-5,0,0"/>
								</Children>
							</Panel>
						</Children>
					</Panel>
				</Children>
			</Panel>
		</Content>
	</UI>

	<Animation Name="MoveAnimation" Type="Move">
		<Keyframes>
			<PositionKeyframe Time="0.0" Value="0,0,0" RelativeTo="Current"  Interpolation="EaseOut"/>
			<PositionKeyframe Time=".2" Value="0,0,0" RelativeTo="Final"/>
		</Keyframes>
	</Animation>

	<Animation Name="SizeAnimation" Type="Size">
		<Keyframes>
			<SizeKeyframe Time="0.0" Value="0,0,0" RelativeTo="Current" Interpolation="SCurve, 0.5"/>
			<SizeKeyframe Time=".2" Value="0,0,0" RelativeTo="Final"/>
		</Keyframes>
	</Animation>


	<UI Name="FocusSelector">
		<Properties>
			<Image Name="FocusImage" Image="image://s:ZoomPane"/>
			<Vector3 Name="Scaling" Vector3="1,1,1"/>
		</Properties>
		<Rules>
			<Binding Source="[Scaling]" Target="[Graphic.Scale]" />
		</Rules>
		<Content>
			<Graphic Name="Graphic" Content="[FocusImage]" MaintainAspectRatio="true" CenterPointPercent="0.5,0.5,0.5" >
			</Graphic>
		</Content>
	</UI>

	<UI Name="ListItem">
		<Properties>
			<lib:BaseFolderItem Name="Model" BaseFolderItem="$Required"/>
			<lib:FolderItemListMCE Name="FolderItems" FolderItemListMCE="$Required"/>
			<a:Application Name="Application" Application="$Required"/>
			<BooleanChoice Name="ShowLabels" BooleanChoice="$Required"/>
			<lib:SizeRef Name="ImageSize" SizeRef="$Required"/>
			<Index Name="Index" Index="$Required"/>
			<Image Name="FocusImage" Image="image://s:ZoomPane"/>
			<Image Name="FolderImage" Image="image://s:Folder"/>
      <Image Name="FolderBannerImage" Image="image://s:FolderBanner"/>
			<Image Name="Tick" Image="image://s:TickPoster"/>
			<Image Name="BlankImage" Image="null"/>
			<Size Name="MinSize" />
			<IntRangedValue Name="NavCount" IntRangedValue="$Required" />
			<cor:Int32 Name="AnimDelay" Int32="1000" />
      <Inset Name="TextFolderMargins" Inset="0,10,0,0"/>
      <Inset Name="TextBannerMargins" Inset="0,0,0,0"/>
		</Properties>

		<Locals>
			<ClickHandler Name="Clicker"/>
			<Timer Name="AnimTimer" Interval="[AnimDelay]" Enabled="false" AutoRepeat="false"/>
			<BooleanChoice Name="InFocus" Value="false" />
			<ShortcutHandler Name="ClearBtn" Handle="true" Shortcut="Clear" HandlerStage="Bubbled" />
      <Inset Name="TextMargins" Inset="[TextFolderMargins]"/>
		</Locals>

		<Rules>

			<Rule>
				<Conditions>
					<Modified Source="[ClearBtn.Invoked]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[Model.ClearWatched]"/>
				</Actions>
			</Rule>
			
			<Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>
			<Binding Source="[Model]" Target="[Clicker.Command]"/>
			<Binding Source="[ImageSize.Value]" Target="[Model.SmallThumbSize]" />
			<Binding Source="[ShowLabels.Value]" Target="[BelowLabelPanel.Visible]" />
      <Binding Source="[FolderItems.UseBanners]" Target="[Model.UseBanners]" />

			<Default Target="[LabelPanel.Visible]" Value="true">
				<Conditions>
					<Equality Source="[Model.HasThumb]" ConditionOp="Equals" Value="false" />
					<Equality Source="[ShowLabels.Value]" ConditionOp="Equals" Value="false" />
				</Conditions>
			</Default>

			<Default Target="[BoxArt.Content]" Value="[FolderImage]">
				<Conditions >
					<Equality Source="[Model.IsFolder]" ConditionOp="Equals" Value="True"/>
					<Equality Source="[Model.HasThumb]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Model.UseBanners]" ConditionOp="Equals" Value="false" />
				</Conditions>
			</Default>

      <Default Target="[BoxArt.Content]" Value="[FolderBannerImage]">
        <Conditions >
          <Equality Source="[Model.IsFolder]" ConditionOp="Equals" Value="True"/>
          <Equality Source="[Model.HasThumb]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Model.UseBanners]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Default>
      
      <Default Target="[BoxArt.MaintainAspectRatio]" Value="false">
        <Conditions >
          <Equality Source="[Model.IsFolder]" ConditionOp="Equals" Value="True"/>
          <Equality Source="[Model.HasThumb]" ConditionOp="Equals" Value="false" />
        </Conditions>
      </Default>
      
			<Changed Source="[Clicker.Invoked]">
				<Actions>
					<Invoke Target="[Application.Navigate]" item="[Model]"/>
					<PlaySound Sound="res://ehres!MiniSelect_a.wav" />
				</Actions>
			</Changed>

      <Default Target="[LabelPanel.Padding]" Value="[TextFolderMargins]">
        <Conditions >
          <Equality Source="[Model.UseBanners]" ConditionOp="Equals" Value="false"/>
        </Conditions>
      </Default>

      <Default Target="[LabelPanel.Padding]" Value="[TextBannerMargins]">
        <Conditions >
          <Equality Source="[Model.UseBanners]" ConditionOp="Equals" Value="true"/>
        </Conditions>
      </Default>
      
			<Condition Source="[InFocus.Value]" SourceValue="true">
				<Actions>
					<Set Target="[MainPanel.Scale]" Value="[Model.PosterZoom]"/>
					<Set Target="[BoxItem.Alpha]" Value="1"/>
					<Set Target="[BelowLabelPanel.Alpha]" Value="1" />
					<Set Target="[BoxItem.Content]" Value="color://me:ZoomBackgroundBlue"/>
					<Set Target="[BoxArt.Content]" Value="[Model.MCMLThumb]"/>
				</Actions>
			</Condition>

			<Changed Source="[Model.MCMLThumb]">
				<Conditions>
					<Equality Source="[InFocus.Value]" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[BoxArt.Content]" Value="[Model.MCMLThumb]"/>
				</Actions>
			</Changed>

			<Changed Source="[Input.KeyFocus]" >
				<Conditions>
					<Equality Source="[Input.KeyFocus]" Value="false" />
				</Conditions>
				<Actions>
					<Invoke Target="[AnimTimer.Stop]" />
					<Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
						<Transformer>
							<MathTransformer Add="1"/>
						</Transformer>
					</Set>
					<Set Target="[InFocus.Value]" Value="false"/>
				</Actions>
			</Changed>

			<Changed Source="[Input.KeyFocus]" >
				<Conditions>
					<Equality Source="[Input.KeyFocus]" Value="true" />
				</Conditions>
				<Actions>
					<Invoke Target="[AnimTimer.Start]" />
					<Set Target="[FolderItems.SelectedIndex.Value]" Value="[Index.SourceValue]"/>
				</Actions>
			</Changed>

			<Changed Source="[AnimTimer.Tick]">
				<Actions>
					<Set Target="[InFocus.Value]" Value="true"/>
					<Set Target="[NavCount.Value]" Value="0" ExclusiveApply="false"/>
				</Actions>
			</Changed>

			<!-- part of an experimental fix -->

			<Binding Source="[Model.MCMLSmallThumb]" Target="[BoxArt.Content]"/>
			<Binding Source="[Model.HaveWatched]" Target="[TickIndicator.Visible]" />
			<!-- Accessibility 
			  <Binding Target="[Accessible.IsPressed]"            Source="[Clicker.Clicking]"/>
			  <Binding Target="[Accessible.IsFocusable]"          Source="[Input.KeyInteractive]"/>
			  <Binding Target="[Accessible.IsFocused]"            Source="[Input.KeyFocus]"/>
			  <Binding Target="[Accessible.Name]"                 Source="[Model.Description]"/>
			  <Default Target="[Accessible.DefaultActionCommand]" Value="[Model]"/>
			  <Default Target="[Accessible.DefaultAction]"        Value="Press"/>
			  <Default Target="[Accessible.Role]"                 Value="PushButton"/>-->

			<Binding Source="[ImageSize.Value]" Target="[ConstraintPanel.MaximumSize]" />
			<Binding Source="[ImageSize.Value]" Target="[BelowLabelPanel.MaximumSize]" />
			<Binding Source="[ImageSize.Value]" Target="[ConstraintPanel.MinimumSize]" />
		</Rules>

		<Content>

			<Graphic Name="MainPanel" Content="[BlankImage]" Scale="1.0,1.0,1.0" Padding="0,0,0,0"  SizingPolicy="SizeToChildren">
				<Animations>
					<Animation Loop="0" CenterPointPercent="0.5,0.5,1.0" Type="Scale">
						<Keyframes>
							<ScaleKeyframe Time="0.00" RelativeTo="Current" Interpolation="EaseOut"/>
							<ScaleKeyframe Time="0.15" RelativeTo="Final"/>
						</Keyframes>
					</Animation>
					<!-- Removed to try an eliminate some of the jerkyness of the fast scrolling
					<TransformAnimation Delay="0.2">
						<Source>
							<Animation Name="Test" Loop="0" Type="Show" CenterPointPercent="0.5,0.5,1.0">
								<Keyframes>
									<ScaleKeyframe Time="0" Value="0,0,0" Interpolation="Log"/>
									<ScaleKeyframe Time="0.5" Value="1,1,1"/>
									<AlphaKeyframe Time="0" Value="0" Interpolation="Log"/>
									<AlphaKeyframe Time="0.5" Value="1" />
								</Keyframes>
							</Animation>
						</Source>
					</TransformAnimation>
		
					<Animation Loop="0" Type="Hide" CenterPointPercent="0.5,0.5,1.0">
						<Keyframes>
							<ScaleKeyframe Time="0" Value="1,1,1" Interpolation="Log"/>
							<ScaleKeyframe Time="0.5" Value="0,0,0"/>
							<AlphaKeyframe Time="0" Value="1" Interpolation="Log"/>
							<AlphaKeyframe Time="0.3" Value="0" />
						</Keyframes>
					</Animation>
					-->
				</Animations>
				<Children>
					<ColorFill Name="BoxItem" Content="Transparent" Alpha="0.7" Padding="0,0,0,0" >
						<Layout>
							<AnchorLayout SizeToHorizontalChildren="true" SizeToVerticalChildren="true"/>
						</Layout>
						<Children>
							<ColorFill Content="Transparent" >
								<LayoutInput>
									<AnchorLayoutInput Horizontal="Center" ContributesToWidth="true"/>
								</LayoutInput>
								<Layout>
									<FlowLayout Orientation="Vertical" ItemAlignment="Center"/>
								</Layout>
								<Children>
									<Text Name="BelowLabelPanel" Margins="0,5,0,-3" Alpha="0.7" Color="White"  Font="Segoe Media Center Semibold, 16" Content="[Model.Description]" WordWrap="false" HorizontalAlignment="Near">
									</Text>
									<Panel Name="ConstraintPanel" Padding="0,0,0,0" MaximumSize="[ImageSize.Value]" MinimumSize="[ImageSize.Value]" >
										<Layout>
											<AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
										</Layout>
										<Children>
											<Graphic  Name="BoxArt" Scale="1,1,1" Padding="0,0,0,0" SizingPolicy="SizeToConstraint" Content="[Model.MCMLSmallThumb]" MaintainAspectRatio="true" >
												<LayoutInput>
													<AnchorLayoutInput Horizontal="Center"/>
												</LayoutInput>
												<Children>
													<Graphic Name="TickIndicator" Content="[Tick]" Margins="5,5,0,0" MaximumSize="30,30" Alpha="0.8" Visible="[Model.HaveWatched]">
													</Graphic>
													<Panel Name="LabelPanel" Visible="false" Layout="Anchor" Padding="[TextMargins]">
														<Children>
															<Text Alpha="1" Name="Label" Color="White" Font="Segoe Media Center, 20, Bold"
																Content="[Model.Description]"  WordWrap="true" Margins="5,5,5,5"  HorizontalAlignment="Center">
															</Text>
															<!-- This adds a black border round the text, change Label text color above to black and optional make LabelPanel always visible -->
															<!--
															<Text Color="White" Font="Segoe Media Center, 20, Bold" Content="[Model.Description]"  WordWrap="true" Padding="5,5,5,5"  HorizontalAlignment="Center">
																<LayoutInput>
																	<AnchorLayoutInput Top="Label, 0, 1" Left="Label, 0, 1"/>
																</LayoutInput>
															</Text>
															<Text Color="White" Font="Segoe Media Center, 20, Bold" Content="[Model.Description]"  WordWrap="true" Padding="5,5,5,5"  HorizontalAlignment="Center">
																<LayoutInput>
																	<AnchorLayoutInput Top="Label, 0, 1" Left="Label, 0, -1"/>
																</LayoutInput>
															</Text>
															<Text Color="White" Font="Segoe Media Center, 20, Bold" Content="[Model.Description]"  WordWrap="true" Padding="5,5,5,5"  HorizontalAlignment="Center">
																<LayoutInput>
																	<AnchorLayoutInput Top="Label, 0, -1" Left="Label, 0, 1"/>
																</LayoutInput>
															</Text>
															<Text Color="White" Font="Segoe Media Center, 20, Bold" Content="[Model.Description]"  WordWrap="true" Padding="5,5,5,5"  HorizontalAlignment="Center">
																<LayoutInput>
																	<AnchorLayoutInput Top="Label, 0, -1" Left="Label, 0, -1"/>
																</LayoutInput>
															</Text>
															-->
															<!--<ColorFill Content="Black" Alpha="0.5" Layout="Fill" />-->
														</Children>
													</Panel>
												</Children>
											</Graphic>

										</Children>
									</Panel>
								</Children>

							</ColorFill>

						</Children>
					</ColorFill>

				</Children>
			</Graphic>
		</Content>
	</UI>
</Mcml>
