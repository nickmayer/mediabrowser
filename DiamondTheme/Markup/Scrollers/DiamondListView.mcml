<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:cor="assembly://MSCorLib/System"
    xmlns:lb="resx://MediaBrowser/MediaBrowser.Resources/ListButton"
    xmlns:a="assembly://MediaBrowser/MediaBrowser"
    xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
    xmlns:f="file://Fonts_DoNotEdit.mcml"
	  xmlns:s="file://Styles_DoNotEdit.mcml"
    xmlns:pp="resx://MediaBrowser/MediaBrowser.Resources/PopupPlay"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
    xmlns:an="resx://MediaBrowser/MediaBrowser.Resources/Animations"
    xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
    xmlns:ib="resx://Diamond/Diamond.Resources/ItemButton"
    xmlns:me="Me">

  <UI Name="DiamondListView">

    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <Font Name="Font" Font="font://f:Diamond_Small" />
    </Properties>

    <Locals>
      <!-- Use the MouseWheel handler to handle the mouse wheel.  -->
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true"
							  HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>

      <ScrollingData Name="ScrollingData" EndPadding="45" />
      <cor:Int32 Name="CounterValue" Int32="0" />
      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
      <ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>
      <IntRangedValue Name="SelectedIndex" Value="0"/>
      <Command Name="ClosePopupPlay"/>

      <IntRangedValue Name="NavCount" Value="0" />
      <cor:Int32 Name="NormalKeyRepeat" Int32="40"/>
      <!-- This must be less than anim delay -->
      <cor:Int32 Name="FastKeyRepeat" Int32="20"/>
      <cor:Int32 Name="AnimDelay" Int32="60" />
      <!-- This must be greater than NormalKeyRepeat-->
      <cor:Int32 Name="SpeedUpDelay" Int32="2"/>

      <cor:Int32 Name="backFocus" Int32="[Folder.SelectedChildIndex]" />

    </Locals>

    <Rules>
      <Binding Source="[SelectedIndex.Value]" Target="[Folder.SelectedChildIndex]" />
      
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>
      <Default Target="[ScrollingData.Repeater]" Value="[MyRepeater]"/>
      
      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ScrollingData.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ScrollingData.PageUp]"/>
        </Actions>
      </Rule>

      <Changed Source="[Application]" InitialEvaluate="true">
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>
      
      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="[SpeedUpDelay]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[FastKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>
      
      <Binding Source="[Folder.Children]" Target="[MyRepeater.Source]"/>
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Modified Source="[Application]" InitialEvaluate="true"/>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[MyRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Rule>
      
      <Rule ConditionLogicalOp="And" >
        <Conditions>
          <Equality Source="[Application.NavigatingForward]" Value="false"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[MyRepeater.NavigateIntoIndex]"  index="[backFocus]"/>
        </Actions>
      </Rule>
      
      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[ScrollingData.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>

    </Rules>

    <Content>
      <Panel Layout="Dock">
        <Children>

          <!-- List Repeater -->
          <Scroller Orientation="Vertical" FadeSize="-15" Name="Scroller" ScrollingData="[ScrollingData]" >
            <LayoutInput>
              <DockLayoutInput Alignment="Fill"  Position="Client"  />
            </LayoutInput>
            <Children>
              <Repeater Source="[Folder.Children]" Layout="Fill" Name="MyRepeater" ContentName="BaseItem" >
                <Layout>
                  <FlowLayout Orientation="Vertical" ItemAlignment="Center" Spacing="0,0"/>
                </Layout>
                <!--<Divider>
                  <Clip FadeSize="150" Orientation="Horizontal" FadeAmount="1" >
                    <Children>
                      <ColorFill Content="DarkSlateGray" Alpha="0.8" Layout="Fill" MaximumSize="0,1" />
                    </Children>
                  </Clip>
                </Divider>-->
                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                      <PositionKeyframe Time="0.65" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Repeater>
            </Children>
           
          </Scroller>
        </Children>
      </Panel>
    </Content>
    <Content Name="BaseItem">
      <me:DiamondListButton Application="[Application]" Index="[RepeatedItemIndex]" Item="[RepeatedItem!lib:Item]" SelectedIndex="[SelectedIndex]" Font="[Font]"/>
    </Content>
  </UI>



  <UI Name="DiamondListButton" BaseUI="ib:ItemButton">

    <Properties>
      <IntRangedValue Name="SelectedIndex" IntRangedValue="$Required"/>
      <cor:String Name="Text" String="" />
      <Index Name="Index" Index="$Required"/>
      <Font Name="Font" Font="$Required"/>
    </Properties>

    <Locals>
      <Image Name="Tick" Image="image://i:Tick"/>
      <Image Name="PCLock" Image="image://i:Lock"/>
      <Size Name="MinSize" Size="300,37" />
      <Size Name="Size" Size="625,37" />
      <Image Name="ImageFocus" Image="image://me:ButtonLeftFocus" />
      <Image Name="ImageNoFocus" Image="image://me:ButtonNoFocus" />
      <Color Name="Color" Color="color://s:D_Light" />
      <Color Name="FocusColor" Color="color://s:D_Normal" />
      <cor:Boolean Name="CenterText" Boolean="false"/>
    </Locals>

    <Rules>
      <!-- Bind the button's label and command-->
      <Binding Source="[Item.Name]" Target="[Label.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding>
      <Binding Source="[Item.HaveWatched]" Target="[TickIndicator.Visible]" >
        <Conditions>
          <Equality Source="[Application.Config.EnableListViewTicks]" Value="true" />
        </Conditions>
      </Binding>

      <!--<Changed Source="[Item.HaveWatched]">
        <Conditions>
          <Equality Source="[Item.HaveWatched]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Application.Config.ListViewWatchedColorMcml]" ConditionOp="NotEquals" Value="Transparent" />
        </Conditions>
        <Actions>
          <Set Target="[Label.Color]" Value="[Application.Config.ListViewWatchedColorMcml]" />
        </Actions>
      </Changed>

      <Rule>
        <Conditions>
          <Equality Source="[Item.HaveWatched]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Application.Config.ListViewWatchedColorMcml]" ConditionOp="NotEquals" Value="Transparent" />
        </Conditions>
        <Actions>
          
        </Actions>
      </Rule>-->
      
      <!-- PC Lock Indicator -->
      <Binding Source="[Item.ParentalAllowed]" Target="[PCIndicator.Visible]" >
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
      </Binding>
      <Binding Source="[Application.Config.ParentalControlEnabled]" Target="[PCPanel.Visible]" />

      <Default Target="[Input.KeyInteractive]" Value="true" />

      <Condition Source="[Input.KeyFocus]" SourceValue="true">
        <Actions>
          <Set Target="[imgButton.Content]" Value="[ImageFocus]"/>
          <Set Target="[Label.Color]" Value="[FocusColor]" />
          <PlaySound Sound="sound://sounds:Focus" />
          <Set Target="[SelectedIndex.Value]" Value="[Index.Value]"/>
        </Actions>
      </Condition>
    </Rules>

    <Content>
      <Graphic Name="imgButton"
           Content="[ImageNoFocus]"
           MouseInteractive="true"
           MinimumSize="[MinSize]"
           MaximumSize="[Size]"
           SizingPolicy="SizeToConstraint"
           HorizontalAlignment="Fill"
           VerticalAlignment="Fill"
                   >
        <Children>
          <Panel Layout="Dock">
            <Children>
              <Panel Name="PCPanel" Layout="Center" MaximumSize="30,20" MinimumSize="20,20" >
                <LayoutInput>
                  <DockLayoutInput Alignment="Center" Position="Left" />
                </LayoutInput>
                <Children>
                  <Graphic Name="PCIndicator" Visible="false" Content="[PCLock]" Margins="0,0,5,0">
                  </Graphic>
                </Children>
              </Panel>
              
              <Panel Layout="Center" MaximumSize="20,20" MinimumSize="20,20" Visible="[Application.Config.EnableListViewTicks]" >
                <LayoutInput>
                  <DockLayoutInput Alignment="Center" Position="Right" />
                </LayoutInput>
                <Children>
                  <Graphic Name="TickIndicator" Visible="false" Content="[Tick]" Margins="0,0,5,0">
                  </Graphic>
                </Children>
              </Panel>

              <Text Name="Label" Color="[Color]" Margins="8,5,0,0" Font="[Font]">
                <LayoutInput>
                  <DockLayoutInput Alignment="Near"  Position="Client"/>
                </LayoutInput>
              </Text>
            </Children>
          </Panel>
        </Children>
      </Graphic>

    </Content>
  </UI>

  <Image Name="ButtonDisabled"          Source="resx://MediaBrowser/MediaBrowser.Resources/ButtonDisabled"          NineGrid="7,7,7,7" />
  <Image Name="ButtonDormant"           Source="resx://MediaBrowser/MediaBrowser.Resources/ButtonDormant"           NineGrid="7,7,7,7" />
  <Image Name="ButtonLeftFocus"         Source="resx://Diamond/Diamond.Resources/dia_list_focus"         NineGrid="7,7,7,7" />
  <Image Name="ButtonLeftFocusOverlay"  Source="resx://MediaBrowser/MediaBrowser.Resources/ButtonLeftFocusOverlay"  NineGrid="7,7,7,7" />
  <Image Name="ButtonNoFocus"           Source="resx://MediaBrowser/MediaBrowser.Resources/ButtonNoFocus"           NineGrid="7,7,7,7" />
  <Image Name="ButtonPressedAfterGlow"  Source="resx://MediaBrowser/MediaBrowser.Resources/ButtonPressedAfterGlow"  NineGrid="7,7,7,7" />
  <Image Name="ButtonPressedHighlight"  Source="resx://MediaBrowser/MediaBrowser.Resources/ButtonPressedHighlight"  NineGrid="7,7,7,7" />

</Mcml>
