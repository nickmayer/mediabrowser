<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:cor="assembly://MSCorLib/System"
	  xmlns:app="assembly://Diamond/Diamond"
	  xmlns:a="assembly://MediaBrowser/MediaBrowser"
	  xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
	  xmlns:ps="resx://MediaBrowser/MediaBrowser.Resources/PosterScroller"
	  xmlns:ip="resx://MediaBrowser/MediaBrowser.Resources/ItemPoster"
    xmlns:mp="resx://MediaBrowser/MediaBrowser.Resources/MPAARating"
	  xmlns:np="resx://MediaBrowser/MediaBrowser.Resources/NowPlayingViewport"
    xmlns:an="resx://MediaBrowser/MediaBrowser.Resources/Animations"
    xmlns:pci="resx://MediaBrowser/MediaBrowser.Resources/PCIndicatorButton"
	  xmlns:wea="resx://Diamond/Diamond.Resources/Weather"
      
      
	  xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
	  xmlns:s="file://Styles_DoNotEdit.mcml"
	  xmlns:f="file://Fonts_DoNotEdit.mcml"
    xmlns:pp="resx://MediaBrowser/MediaBrowser.Resources/PopupPlay"
    xmlns:ib="resx://Diamond/Diamond.Resources/ItemButton"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
    
    xmlns:bd="resx://Diamond/Diamond.Resources/DiamondBackdrop"
    xmlns:dp="resx://Diamond/Diamond.Resources/DiamondPagination"      
    xmlns:dtb="resx://Diamond/Diamond.Resources/DiamondToolBox"
    xmlns:ds="resx://Diamond/Diamond.Resources/DiamondSpin"
    xmlns:me="Me"
	  >


  <UI Name="LayoutRoot">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <cor:Boolean Name="UseCustomAnchor" Boolean="false" />
      <BooleanChoice Name="NavInto" Value="false" />
      <app:Config Name="ThemeConfig" />
    </Properties>

    <Locals>
      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      
      <Timer Name="FullDetailsTimer" Interval="300" AutoRepeat="false"/>      

      <IntRangedValue Name="SortOrderIndex" MinValue ="0" MaxValue="999"/>
      <Timer Name="InfoTimer" AutoRepeat="false" Interval="200" Enabled="false"/>
      <ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true"
							  HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
      <ScrollingData Name="ScrollingData" LockedAlignment="0.5" LockedPosition="0.5"  />

      <cor:Boolean Name="CanPlay" Boolean="false" />
      <Timer Name="HideFindAsYouType" Interval="3000" AutoRepeat="false"/>
      <!--<Timer Name="BGTimer" Interval="100" Enabled="false"/>-->
      <Command Name="Configure" />
      <Command Name="CmdRecentItems" />

      <!-- Item Panel Commands-->
      <Command Name="CmdRecentlyAdded" />
      <Command Name="CmdRecentlyWatched" />

      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
      <ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>
      <Timer Name="RefocusViewTimer" AutoRepeat="false" Interval="150" Enabled="true" />
      <!-- this timer is needed to ensure focus stas with the view properties when the viewType changes, doing it not via a timer doesn't always work-->
      <Timer Name="InitialFocusTimer" AutoRepeat="false" Interval="1500" Enabled="false" />

      <a:Clock Name="Clock"/>

      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      <IntRangedValue Name="SelectedIndex" Value="0"/>

      <IntRangedValue Name="NavCount" Value="0" />
      <cor:Int32 Name="NormalKeyRepeat" Int32="250"/>
      <!-- This must be less than anim delay -->
      <cor:Int32 Name="FastKeyRepeat" Int32="150"/>
      <cor:Int32 Name="AnimDelay" Int32="300" />
      <!-- This must be greater than NormalKeyRepeat-->
      <cor:Int32 Name="SpeedUpDelay" Int32="2"/>

      <Choice Name="RecentItemsDesc">
        <Options>
          <cor:String String="recently added" />
          <cor:String String="recently watched" />
          <cor:String String="recently added unwatched" />
        </Options>
      </Choice>

      <Choice Name="RecentItemModel">
        <Options>
          <cor:String String="added" />
          <cor:String String="watched" />
          <cor:String String="unwatched" />
        </Options>
      </Choice>

      <app:Plugin Name="plugin" />
      <cor:Boolean Name="CannotNav" Boolean="false" />
    </Locals>

    <Rules>
      <!-- Default Values-->
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
      <Default Target="[ScrollingData.Repeater]" Value="[Repeater]" />
      

      <!-- RECENT ITEMS MODEL-->
      <Default Target="[RecentItemModel.Chosen]" Value="[Application.RecentItemOption]" />
      
      <Changed Source="[RecentItemModel.ChosenIndex]" >
        <Actions>
          <Set Target="[CannotNav]" Value="true" InvokePolicy="Synchronous" />
          <Invoke Target="[SelectedItem.RecentItemsChanged]"  InvokePolicy="Synchronous"/>
          <Set Target="[RecentItemsDesc.ChosenIndex]" Value="[RecentItemModel.ChosenIndex]" />
          <Set Target="[Application.RecentItemOption]" Value="[RecentItemModel.Chosen!cor:String]" />
          <Set Target="[NPVTitle.Content]" Value="[RecentItemsDesc.Chosen!cor:String]" />
          <Set Target="[NPVTitle2.Content]" Value="[RecentItemsDesc.Chosen!cor:String]" />
          <Set Target="[CannotNav]" Value="false" InvokePolicy="Synchronous" />
        </Actions>
      </Changed>

      <Changed Source="[SelectedItem]">
        <Conditions>
          <Equality Source="[SelectedItem.ShowNewestItems]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[RefocusViewTimer.Enabled]" Value="true" />
          <Set Target="[RecentItemsPanel.Visible]" Value="true"/>
          <!--<Set Target="[NavInto.Value]" Value="true" />-->          
        </Actions>
      </Changed>
      
      <Changed Source="[SelectedItem]" >
        <Conditions>
          <Equality Source="[SelectedItem.ShowNewestItems]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[RecentItemsPanel.Visible]" Value="false"/>
        </Actions>
      </Changed>

      <!-- Art -->
      <Binding Source="[SelectedItem.BackdropImage]" Target="[MainBG.Image]">
        <Conditions>
          <Equality Source="[Application.Config.ShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      <Binding Source="[SelectedItem]" Target="[MainBG.Item]">
        <Conditions>
          <Equality Source="[Application.Config.ShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!-- Timer Triggers -->
      <Rule>
        <Conditions>
          <Modified Source="[RefocusViewTimer.Tick]"  />
          <IsType Source="[SelectedItem]" Type="lib:FolderModel"/>
        </Conditions>
        <Actions>
          <Set Target="[RefocusViewTimer.Enabled]" Value="false" />
          <Set Target="[RecentItemsPanel.Folder]" Value="[SelectedItem!lib:FolderModel]" />
          <!--<Invoke Target="[ItemMenuPanel.NavigateInto]" />-->
        </Actions>
      </Rule>



      <!--<Changed Source="[NavInto.Value]" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[CannotNav]" ConditionOp="Equals" Value="false" />
          <Equality Source="[NavInto.Value]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[NavInto.Value]" Value="false" />
          <Invoke Target="[ItemMenuPanel.NavigateInto]" />
        </Actions>
      </Changed>-->
      
      <!--<Changed Source="[NavInto.Value]" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[CannotNav]" ConditionOp="Equals" Value="true" />
          <Equality Source="[NavInto.Value]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[NavInto.Value]" Value="false" />
        </Actions>
      </Changed>-->




      <!--<Changed Source="[Application]" InitialEvaluate="true" >
        <Conditions>
          <Equality Source="[Application.RecentItemOption]" Value="watched"/>
        </Conditions>
        <Actions>
          
          <Set Target="[NPVTitle.Content]" Value="recently watched" />
          <Set Target="[NPVTitle2.Content]" Value="recently watched" />
        </Actions>
      </Changed>-->
      
      <!-- Commands -->
      <!--<Changed Source="[CmdRecentlyAdded.Invoked]">
        <Actions>
          <Invoke Target="[SelectedItem.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="added" />

          <Set Target="[NPVTitle.Content]" Value="recently added" />
          <Set Target="[NPVTitle2.Content]" Value="recently added" />
        </Actions>
      </Changed>
      <Changed Source="[CmdRecentlyWatched.Invoked]">
        <Actions>
          <Set Target="[Application.RecentItemOption]" Value="watched" />
          <Invoke Target="[SelectedItem.RecentItemsChanged]" />
          <Set Target="[NPVTitle.Content]" Value="recently watched" />
          <Set Target="[NPVTitle2.Content]" Value="recently watched" />
        </Actions>
      </Changed>-->
      
      
      
      

      <!--Make sure initial focus is in the right place-->
      <Changed Source="[InitialFocusTimer.Tick]" >
        <Actions>
          <Set Target="[InitialFocusTimer.Enabled]" Value="false" />
          <Invoke Target="[ItemMenuPanel.NavigateInto]" />
        </Actions>
      </Changed>

      <!-- Bindings -->
      <Binding Source="[SelectedIndex.Value]" Target="[Folder.SelectedChildIndex]" />
      <Binding Target="[Repeater.Source]" Source="[Folder.Children]"/>
      <Binding Source="[Application.CurrentItem.PreferredImage]" Target="[CurrentPoster.Content]" />
      <!-- Apply Proper Theme Alpha Blending -->
      <Binding Source="[ThemeConfig.AlphaOpacity!cor:Single]" Target="[NPClipP.Alpha]">
        <Transformer>
          <MathTransformer Divide="100"/>
        </Transformer>
      </Binding>

      <!--These rules allow the user to move over the posters with the mouse without them scrolling away under them-->
      <Rule>
        <Conditions>
          <Equality Source="[Application.IsMouseActive]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[ScrollingData.LockedPosition]" Value="-1" />
          <Set Target="[ScrollingData.LockedAlignment]" Value="-1" />
          <Set Target="[ScrollingData.BeginPadding]" Value="160" />
          <Set Target="[ScrollingData.EndPadding]" Value="160" />
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[Application.IsMouseActive]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[ScrollingData.LockedPosition]" Value=".5" />
          <Set Target="[ScrollingData.LockedAlignment]" Value=".5" />
        </Actions>
      </Rule>
      <!-- End Mouse rules-->

      <Changed Source="[Configure.Invoked]">
        <Actions>
          <Invoke Target="[Application.OpenConfiguration]" showFullOptions="true" />
        </Actions>
      </Changed>

      <!-- Folder/Item Selection -->
      <Changed Source="[Folder.SelectedChildIndex]">
        <Conditions>
          <Equality ConditionOp="NotEquals" Source="[Folder.SelectedChildIndex]" Value="-1"></Equality>
        </Conditions>
        <Actions>
          <Set Target="[SelectedItem]" Value="[Folder.SelectedChild]" />
        </Actions>
      </Changed>


      <!-- Playback Control -->
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.PlaybackController.IsStopped]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[NowPlaying.Visible]" Value="false" />
          <Set Target="[PanelPoster.Visible]" Value="true" />
          <Set Target="[RecentListPanel.Navigation]" Value="ContainHorizontal" />
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.PlaybackController.IsPlaying]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[NowPlaying.Visible]" Value="true" />
          <Set Target="[PanelPoster.Visible]" Value="false" />
          <Set Target="[RecentListPanel.Navigation]" Value="None" />
        </Actions>
      </Rule>
    
      <!-- Typing Handler / Jump List -->
      <Changed Source="[Application]" InitialEvaluate="true">
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="[SpeedUpDelay]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[FastKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[ScrollingData.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>

      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ScrollingData.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ScrollingData.PageUp]"/>
        </Actions>
      </Rule>


      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[Application.Config.ShowBackdrop]" Value="true" />
          <Equality Source="[Application.Config.ShowRootBackground]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[NPClipP.Visible]" Value="true" />
          <Set Target="[MainBG.Visible]" Value="true" />
        </Actions>            
      </Rule>
      

      <!-- Extender Bindings-->
      <Condition Source="[Application.RunningOnExtender]" ConditionOp="Equals" SourceValue="true" Target="[MainBG.LayoutInput]" Value="global://dtb:LI_Bg_Extender" />
 
    </Rules>

    <Content>
      <Panel>
        <Children>
          <Clip Layout="Form" Padding="[Application.Config.OverScanPadding]" Scale="[Application.Config.OverScanScaling]" CenterPointPercent="0.5,0.5,0.5">
            <Children>

              <!-- Gradient Center Panel Borders -->
              <Panel>
                <LayoutInput>
                  <AnchorLayoutInput Bottom="ItemMenuPanel,0" Horizontal="Fill"/>
                </LayoutInput>
                <Children>
                  <Clip FadeSize="50" Orientation="Horizontal" FadeAmount="1" >
                    <Children>
                      <ColorFill Content="Gray" Alpha="0.8" Layout="Fill" MaximumSize="0,1" />
                    </Children>
                  </Clip>
                </Children>
              </Panel>
              <Panel>
                <LayoutInput>
                  <AnchorLayoutInput Top="ItemMenuPanel,1" Horizontal="Fill"/>
                </LayoutInput>
                <Children>
                  <Clip FadeSize="50" Orientation="Horizontal" FadeAmount="1" >
                    <Children>
                      <ColorFill Content="Gray" Alpha="0.8" Layout="Fill" MaximumSize="0,1" />
                    </Children>
                  </Clip>
                </Children>
              </Panel>

              <!-- Center Scrolling Panel -->
              <Graphic Name="ItemMenuPanel" Layout="Anchor" >
                <LayoutInput>
                  <AnchorLayoutInput Horizontal="Fill" Top="Parent,0.85" Bottom="Parent,0.85,65"/>
                </LayoutInput>
                <Children>
                  <Scroller Orientation="Horizontal" FadeSize="5" Name="Scroller" Navigation="RememberFocus"
                            ScrollingData="[ScrollingData]" Padding="50,0,50,0" >
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Fill" Vertical="Fill" />
                    </LayoutInput>
                    <Children>
                      <Repeater Source="[Folder.Children]" Name="Repeater" ContentName="BaseItem" DiscardOffscreenVisuals="false"  >
                        <Layout>
                          <FlowLayout Orientation="Horizontal" Spacing="50,0" Repeat="WhenTooBig" RepeatGap="150,0"/>
                        </Layout>
                        <Animations>
                          <Animation Type="Move">
                            <Keyframes>
                              <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                              <PositionKeyframe Time="0.65" RelativeTo="Final"/>
                            </Keyframes>
                          </Animation>
                        </Animations>
                      </Repeater>
                    </Children>

                  </Scroller>
                  <ColorFill Content="Black" Alpha="0.55">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Fill" Vertical="Fill" ContributesToHeight="false" ContributesToWidth="false"/>
                    </LayoutInput>
                  </ColorFill>
                </Children>
              </Graphic>

              <!-- Weather Panel -->
              <wea:YahooWeatherLarge>
                <LayoutInput>
                  <AnchorLayoutInput Top="Parent,0,2" Left="Parent,0.35"/>
                </LayoutInput>
              </wea:YahooWeatherLarge>


              <!-- Now Playing Box -->
              <np:NowPlayingViewportLarge Name="NowPlaying" Visible="false" Application="[Application]">
                <LayoutInput>
                  <FormLayoutInput Left="Parent,0.02" Right="Parent,0.28" Top="Parent,0.28" Bottom="Parent,0.63"/>
                </LayoutInput>
              </np:NowPlayingViewportLarge>


              <!-- Poster Box -->
              <Panel Name="PanelPoster" Layout="Center">
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0,20" Right="Parent,0.30" Top="Parent,0.15" Bottom="Parent,0.75"/>
                </LayoutInput>
                <Children>
                  <Graphic Name="CurrentPoster" MaintainAspectRatio="true"  >
                  </Graphic>
                </Children>
              </Panel>

              <!-- Header Buttons -->
              <Panel Name="recentlyAdded">
                <LayoutInput>
                  <FormLayoutInput Left="Parent,0.95,-700" Top="Parent,0.18"  />
                </LayoutInput>
                <Layout>
                  <FlowLayout Orientation="Vertical" ItemAlignment="Far" />
                </Layout>
                <Children>
                  <Panel>
                    <Layout>
                      <FlowLayout Orientation="Horizontal" Spacing="10,0" />
                    </Layout>
                    <Children>
                      <ds:DiamondSpin Name="FontThemeSpinner" Choice="[RecentItemModel]"
                                      Icon="null" MaxSize="30,30"/>
                      
                      <Panel Name="RecentText" Margins="5,0,0,0" Layout="Anchor" >
                        <Children>
                          <Text Name="NPVTitle" Content="recently added" Color="color://s:D_Light"
                                Font="font://f:Diamond_Title" />
                          <Text Name="NPVTitle2" Content="recently added" Color="Black"
                                Font="font://f:Diamond_Title" >
                            <LayoutInput>
                              <AnchorLayoutInput Top="NPVTitle, 0, 2" Left="NPVTitle, 0, 2"/>
                            </LayoutInput>
                          </Text>
                        </Children>
                      </Panel>

                    </Children>
                  </Panel>

                </Children>
              </Panel>
              <!-- Header Text Description -->

              <!-- These two ColorFills on either side of the scroller distract the mouse so it won't scroll when you go across screen -->
              <ColorFill MouseInteractive="true" Content="Transparent">
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0" Top="RecentListPanel,0" Right="RecentListPanel,0" Bottom="RecentListPanel,1"/>
                </LayoutInput>
              </ColorFill>
              <ColorFill MouseInteractive="true" Content="Transparent">
                <LayoutInput>
                  <AnchorLayoutInput Left="RecentListPanel,1" Top="RecentListPanel,0" Right="Parent,1" Bottom="RecentListPanel,1"/>
                </LayoutInput>
              </ColorFill>


              <!-- Recent Items -->
              <Clip Name="RecentListPanel" Navigation="ContainHorizontal">
                <LayoutInput>
                  <FormLayoutInput Left="Parent,0.98,-700" Top="recentlyAdded,1,5" Right="Parent,.98"
                                   Bottom="Parent, 0.83,0"/>
                </LayoutInput>
                <Layout>
                  <FlowLayout Orientation="Vertical" Spacing="0,0"/>
                </Layout>
                <Children>
                  <me:RecentItemList Name="RecentItemsPanel" Application="[Application]"  NavInto="[NavInto]" />
                </Children>
              </Clip>

              <!-- Background Fade Object (hidden when no background image selected)-->
              <!--<Graphic Name="NPClipP" Content="image://me:50AlphaBgforTab" Visible="[Application.Config.ShowRootBackground]">
                <LayoutInput>
                  <AnchorLayoutInput Top="Parent, 0.1" Bottom="ItemMenuPanel,0,-1" Left="Parent,0,-10" Right="Parent,1,10" />
                </LayoutInput>
              </Graphic>-->

              <Clip  Name="NPClipP" Visible="false"
                     FadeSize="300" Orientation="Horizontal" FadeAmount="1" ShowFar="false" >
                <LayoutInput>
                  <AnchorLayoutInput Top="Parent, 0.17" Bottom="ItemMenuPanel,0,-1" Left="Parent,0.3" Right="Parent,1" />
                </LayoutInput>
                <Children>
                  <ColorFill Content="Black" Alpha="0.65" Layout="Fill" />
                </Children>
              </Clip>

              <!-- Main Background -->
              <bd:Backdrop4 Name="MainBG" Visible="false" Image="[Folder.BackdropImage]" Item="[Folder]" LayoutInput="global://dtb:LI_Bg">
              </bd:Backdrop4>

             

            </Children>
          </Clip>
        </Children>
      </Panel>
    </Content>
    <Content Name="BaseItem">
      <me:RootScrollerItem Item="[RepeatedItem!lib:FolderModel]" ParentFolder="[Folder]" Application="[Application]"
                           SelectedIndex="[SelectedIndex]" Index="[RepeatedItemIndex.SourceValue]" NavCount="[NavCount]" />
    </Content>
  </UI>

  <UI Name="RootScrollerItem" BaseUI="ib:ItemButton">
    <Properties>
      <lib:FolderModel Name="ParentFolder" FolderModel="$Required" />
      <IntRangedValue Name="SelectedIndex" IntRangedValue="$Required"/>
      <cor:Int32 Name="Index" Int32="0"/>
      <IntRangedValue Name="NavCount" IntRangedValue="$Required" />
    </Properties>

    <Locals>
      <Color Name="FocusedColor" Color="color://s:D_Focus" />
      <Color Name="IdleColor" Color="color://s:D_Light" />
      <Color Name="Color" Color="color://s:D_Normal" />
    </Locals>

    <Rules>
      <Condition Source="[Input.KeyFocus]" SourceValue="true">
        <Actions>
          <!--recent list no longer has focus so set current item back to normal-->
          <Set Target="[Application.CurrentItem]" Value="null" />
          <Set Target="[SelectedIndex.Value]" Value="[Index]"/>
          <Set Target="[Title.Color]" Value="[Color]"/>
          <Set Target="[TR.ColorFilter]" Value="[FocusedColor]"/>
        </Actions>
      </Condition>

      <Rule>
        <Conditions>
          <Equality Source="[SelectedIndex.Value]" ConditionOp="NotEquals" Value="[Index]" />
        </Conditions>
        <Actions>
          <Set Target="[Title.Color]" Value="[IdleColor]"/>
          <Set Target="[TR.ColorFilter]" Value="[IdleColor]"/>
          <Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
            <Transformer>
              <MathTransformer Add="1"/>
            </Transformer>
          </Set>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[SelectedIndex.Value]" ConditionOp="Equals" Value="[Index]" />
        </Conditions>
        <Actions>
          <Set Target="[SelectedIndex.Value]" Value="[Index]"/>
          <Set Target="[TR.Visible]" Value="true"/>
        </Actions>
      </Rule>
    </Rules>

    <Content>
      <Graphic Name="Bg" MinimumSize="0,65" Content="image://i:BlankImage" SizingPolicy="SizeToChildren"
               Padding="25,0,25,0">
        <Layout>
          <FlowLayout Orientation="Horizontal" />
        </Layout>
        <Children>

          <Text Name="Title" Content="[Item.Name]" Color="[IdleColor]" Margins="0,5,0,0"
                Font="font://f:Diamond_EHS_Scroll" />

          <Graphic Name="TR" MinimumSize="25,25" MaximumSize="25,25" Content="image://me:TriangleR"
                   ColorFilter="[IdleColor]" Visible="false" Margins="0,20,0,0" />
        </Children>
      </Graphic>
    </Content>
  </UI>

  <UI Name="RecentItemList">
    <Properties>
      <lib:FolderModel Name="Folder"/>
      <a:Application Name="Application" Application="$Required"/>
      <BooleanChoice Name="NavInto" BooleanChoice="$Required" />
    </Properties>
    <Locals>
      <ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true"
							  HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
      <ScrollingData Name="ScrollingData" LockedAlignment="0.0" LockedPosition="0.01"  />

      <GridLayout Name="MyLayout" Orientation="Vertical" AllowWrap="true" Spacing="10,0" Repeat="Never"
                  RepeatGap="0" Rows="4" />
      <Size Name="ScrollSize" Size="700,400" />
    </Locals>
    <Rules>
      <!-- Default Values-->
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
      <Default Target="[ScrollingData.Repeater]" Value="[Repeater]" />
      <Condition Source="[Folder.QuickListItems.Count]" ConditionOp="Equals" SourceValue="0">
        <Actions>
          <Set Target="[EmptyList.Visible]" Value="true" />
          <Set Target="[ItemsClip.Visible]" Value="false" />
          <Set Target="[Pagination.Visible]" Value="false" />
        </Actions>
      </Condition> 
      <!-- Binding for Newest Items-->
      <Binding Source="[Folder.QuickListItems]" Target="[Repeater.Source]"/>
      <!-- Pagination Rules
      <Changed Source="[Folder.QuickListItems]">
        <Actions>
          <Invoke Target="[ScrollingData.Home]" InvokePolicy="Synchronous" />
          <Set Target="[NavInto.Value]" Value="true" />
        </Actions>
      </Changed>-->
      <Binding Source="[ScrollingData.CurrentPage]" Target="[Pagination.Value]" />
      <Binding Source="[ScrollingData.TotalPages]" Target="[Pagination.MaxPages]" />
    </Rules>
    
    <Content>
      <Panel>
        <Layout>
          <FlowLayout ItemAlignment="Center" Orientation="Vertical"/>
        </Layout>
        <Children>
          
          <!-- Poster Images-->
          <Clip Name="ItemsClip" FadeSize="20" Orientation="Horizontal" FadeAmount="1" CenterPointPercent="0.5,0.5,0.5"
                MaximumSize="[ScrollSize]" MinimumSize="[ScrollSize]" Visible="true">
            <Children>
              <Scroller Orientation="Horizontal" Margins="0,0,0,0" Name="Scroller" FadeSize="5" ScrollingData="[ScrollingData]">
                <Children>
                  <Repeater Name="Repeater" Layout="[MyLayout]" >
                    <Content>
                      <me:RecentItems Application="[Application]" Item="[RepeatedItem!lib:Item]" 
                                      Index="[RepeatedItemIndex]"  />
                    </Content>
                    <Animations>
                      <Animation Type="Move">
                        <Keyframes>
                          <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                          <PositionKeyframe Time="0.65" RelativeTo="Final"/>
                        </Keyframes>
                      </Animation>
                    </Animations>
                  </Repeater>
                </Children>
              </Scroller>
                
                </Children>
          </Clip>
          <!-- Pagination -->
          <dp:DiamondPagination Name="Pagination" Value="3" Visible="true" />
          <Text Name="EmptyList" Content="No Items To Show" Font="font://f:Diamond_Title" Color="color://s:D_Normal" Visible="false" >
            <LayoutInput>
              <AnchorLayoutInput Bottom="Parent,1,-5"/>
            </LayoutInput>
          </Text>

        </Children>
      </Panel>
    </Content>
  </UI>

  <UI Name="RecentItems">
    <Properties>
      <a:Application Name="Application" Application="$Required" />
      <lib:Item Name="Item" Item="$Required" />
      <Index Name="Index" Index="$Required"/>
      <Size Name="MinSize" Size="700,88"/>
      <app:AreaOfInterestHelper Name="AreaOfInterestHelper" />
      <Timer Name="AreaHelpTimer" AutoRepeat="false" Interval="200" Enabled="false" />
    </Properties>

    <Locals>
      <Image Name="Tick" Image="image://i:Tick"/>
      <ClickHandler Name="Clicker"/>
      <cor:Int32 Name="DisplayCount" Int32="20" />
      <Color Name="FocusColor" Color="color://s:D_Normal" />
      <Color Name="Color" Color="color://s:D_Light" />
      <Color Name="BulletFocusColor" Color="color://s:D_Normal" />
    </Locals>

    <Rules>

      <Changed Source="[Index]" InitialEvaluate="true" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Index.Value]" ConditionOp="Equals" Value="0"  />
        </Conditions>
        <Actions>
          <Invoke Target="[AreaOfInterestHelper.SetSelected]" Panel="[Bg]" />
          <Set Target="[AreaHelpTimer.Enabled]" Value="true" />
        </Actions>
      </Changed>

      <Rule>
        <Conditions>
          <Modified Source="[AreaHelpTimer.Tick]"  />
        </Conditions>
        <Actions>
          <Set Target="[AreaHelpTimer.Enabled]" Value="false" />
          <Invoke Target="[AreaOfInterestHelper.RemoveLayoutInput]" Panel="[Bg]" />
        </Actions>
      </Rule>
      
      
      <Rule>
        <Actions>
          <Invoke Target="[Item.SetPrimarySmallToTiny]"/>
        </Actions>
      </Rule>

      <Default Target="[Input.KeyInteractive]" Value="true" />

      <!--<Binding Source="[Item.PrimaryImageSmall]" Target="[ItemPoster.Content]" />-->
      <Binding Source="[Item.LongName]" Target="[Txt1.Content]" />
      <Binding Source="[Item.RecentDateString]" Target="[Txt2.Content]" />
      <Binding Source="[Item.MpaaRating]" Target="[MPAARating.Value]" />
      

      <Binding Source="[Item.HaveWatched]" Target="[TickIndicator.Visible]" >
        <Conditions>
          <Equality Source="[Application.Config.ShowWatchTickInPosterView]" Value="true" />
        </Conditions>
      </Binding>

      <Condition Source="[Index.Value]" ConditionOp="GreaterThan" SourceValue="[DisplayCount]" Target="[Bg.Alpha]" Value="0" />

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Application.CurrentItem]" Value="[Item]" />
          <Set Target="[Runtime.Color]" Value="[FocusColor]" />
          <Set Target="[Txt1.Color]" Value="[FocusColor]" />
          <Set Target="[Txt2.Color]" Value="[FocusColor]" />
          <Set Target="[MPAARating.ColorFilter]" Value="[FocusColor]" />
          <Set Target="[TickIndicator.ColorFilter]" Value="[FocusColor]" />
          <Set Target="[TR.Visible]" Value="true" />
        </Actions>
      </Changed>

      <Changed Source="[Clicker.Invoked]">
        <Actions>
          <PlaySound Sound="sound://sounds:Miniselect" />
          <Invoke Target="[Application.Navigate]" item="[Item]"/>
        </Actions>
      </Changed>
    </Rules>

    <Content>
      <Panel Name="Bg" Layout="Anchor" MinimumSize="[MinSize]" MaximumSize="[MinSize]">
        <Children>
          <Panel Layout="Anchor">
            <Children>
              <Panel MinimumSize="25,25" Name="indicatorPanel">
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent, 0"/>
                </LayoutInput>
                <Children>
                  <Graphic Name="TR" MinimumSize="25,25" MaximumSize="25,25" Content="image://me:TriangleL"
                   ColorFilter="[BulletFocusColor]" Visible="false" />
                </Children>
              </Panel>

              <Panel Name="lPanel">
                <Layout>
                  <FlowLayout Orientation="Vertical" Spacing="-3,-3" />
                </Layout>
                <LayoutInput>
                  <AnchorLayoutInput Left="indicatorPanel,1,5" Right="Parent,1"/>
                </LayoutInput>
                <Children>
                  <Text Name="Txt1" Color="[Color]" Content="Title of Item 1" Font="font://f:Diamond_Large" />
                  <Panel Padding="30,0,0,0">
                    <Layout>
                      <FlowLayout Orientation="Horizontal" Spacing="5,5" />
                    </Layout>
                    <Children>
                      <mp:MPAARating Name="MPAARating" Value="[Item.MpaaRating]" ColorFilter="[Color]" MaximumSize="0,30"/>
                      <Text Name="Runtime" Content="[Item.RunningTimeString]"
                              Font="font://f:Diamond_Small" Color="[Color]" />
                    </Children>
                  </Panel>
                  <Panel Padding="30,0,0,0" >
                    <Layout>
                      <FlowLayout Orientation="Horizontal" Spacing="5,5" />
                    </Layout>
                    <Children>
                      <Text Name="Txt2" Color="[Color]" Font="font://f:Diamond_Small" />
                      <Graphic Name="TickIndicator" ColorFilter="[Color]" Visible="false" Content="[Tick]" Margins="20,0,0,0" />
                      <Graphic Name="PCLock" Layout="Form" Visible="false" Content="image://i:Lock" MaintainAspectRatio="true" MaximumSize="25,25" />
                    </Children>
                  </Panel>
                </Children>
              </Panel>
            </Children>
          </Panel>
          
        </Children>
      </Panel>
      
      
    </Content>
  </UI>


  <Image Name="HiliteBtn" Source="resx://MediaBrowser/MediaBrowser.Resources/ButtonLeftFocusBlack" NineGrid="5,5,5,5" />
  <Image Name="HiliteBg" Source="resx://MediaBrowser/MediaBrowser.Resources/rootscrollhilite" NineGrid="10,10,10,10" />
  <Image Name="HiliteFocusBg" Source="resx://MediaBrowser/MediaBrowser.Resources/rootscrollhilitefocus" NineGrid="10,10,10,10" />
  <Image Name="PosterFrame" Source="resx://MediaBrowser/MediaBrowser.Resources/poster_frame" NineGrid="10,10,10,10" />
  <Image Name="50AlphaBg" Source="resx://MediaBrowser/MediaBrowser.Resources/BlackBtnAlpha50" NineGrid="10,10,10,10" />
  <Image Name="50AlphaBgforTab" Source="resx://MediaBrowser/MediaBrowser.Resources/BlackBtnAlpha50forTabRt" NineGrid="10,10,10,10" />
  <Image Name="50AlphaTab" Source="resx://MediaBrowser/MediaBrowser.Resources/BlackTabAlpha50" NineGrid="10,10,10,10" />

  <Image Name="TriangleR" Source="resx://Diamond/Diamond.Resources/IconRT" />
  <Image Name="TriangleL" Source="resx://Diamond/Diamond.Resources/IconPlay" />

</Mcml>