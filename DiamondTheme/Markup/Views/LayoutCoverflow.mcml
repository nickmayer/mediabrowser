<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:cor="assembly://MSCorLib/System"
	  xmlns:a="assembly://MediaBrowser/MediaBrowser"
	  xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
	  xmlns:s="file://Styles_DoNotEdit.mcml"
	  xmlns:f="file://Fonts_DoNotEdit.mcml"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
      
    xmlns:fs="resx://Diamond/Diamond.Resources/FocusSelector"
	  xmlns:i="resx://Diamond/Diamond.Resources/Images"
    xmlns:pvi="resx://Diamond/Diamond.Resources/PosterViewItem"
    xmlns:dtb="resx://Diamond/Diamond.Resources/DiamondToolBox"
	  xmlns:bd="resx://Diamond/Diamond.Resources/DiamondBackdrop"
    xmlns:app="assembly://Diamond/Diamond"
    xmlns:me="Me"
	  >

  <UI Name="DiamondLayoutCoverflow">

    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <cor:Boolean Name="UseCustomAnchor" Boolean="false" />
      <app:Config Name="ThemeConfig" />
    </Properties>

    <Locals>
      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />

      <AnchorLayoutInput Name="AnchorNormal" Horizontal="Fill" Top="Parent,0.1"  Bottom="Parent,1,-100" />
      <AnchorLayoutInput Name="AnchorCustom" Horizontal="Fill" Top="Parent, 0,-50" Bottom="Parent, 1" />
    </Locals>

    <Rules>
      <!-- Backdrop-->
      <Binding Target="[Backdrop.Image]" Source="[Folder.SelectedChild.BackdropImage]" />
      <Binding Target="[Backdrop.Item]" Source="[Folder.SelectedChild]" />
      <Binding Target="[Backdrop.Visible]"   Source="[Folder.DisplayPrefs.UseBackdrop.Value]">
        <Conditions>
          <Equality Source="[Application.Config.ShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!-- Title Bindings -->
      <Binding Source="[Folder.SelectedChild]" Target="[TitleUI.Item]"/>

      <!-- InfoBox Bindings -->
      <Binding Source="[Folder.SelectedChild]" Target="[InfoBox.Item]" >
        <Conditions>
          <Equality Source="[ThemeConfig.InfoBoxCoverflow]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      <Binding Source="[ThemeConfig.InfoBoxCoverflow]" Target="[InfoBox.Visible]" />

      <!-- Counter Bindings -->
      <Binding Source="[Folder.SelectedChildIndex]" Target="[Counter.List_Counter]" />
      <Binding Source="[Folder.Children.Count]" Target="[Counter.List_Total]" />

      <!-- Layout Bindings -->
      <!--<Condition Source="[UseCustomAnchor]" ConditionOp="Equals" SourceValue="false"
                 Target="[CFScroller.LayoutInput]" Value="[AnchorNormal]" />
      <Condition Source="[UseCustomAnchor]" ConditionOp="Equals" SourceValue="true"
                 Target="[CFScroller.LayoutInput]" Value="[AnchorCustom]" />-->

      <!-- Extender Bindings -->
      <Condition Source="[Application.RunningOnExtender]" ConditionOp="Equals" SourceValue="true"
                  Target="[Backdrop.LayoutInput]" Value="global://dtb:LI_Bg_Extender"/>
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.RunningOnExtender]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeConfig.AutoExtenderLayout]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[TitleUI.LayoutInput]" Value="global://dtb:LI_Title_Extender" />
          <Set Target="[Counter.LayoutInput]" Value="global://dtb:LI_ListCounter_Extender" />
        </Actions>
      </Rule>
    </Rules>

    <Content>
      <Panel Layout="Form" Navigation="ContainHorizontal">
        <Children>


          <!-- Title Details -->
          <dtb:DiamondTitleUI Name="TitleUI" Item="[SelectedItem]" LayoutInput="global://dtb:LI_Title" />

          <!-- List Counter -->
          <dtb:DiamondCounter Name="Counter" LayoutInput="global://dtb:LI_ListCounter" />

          <!-- InfoBox -->
          <dtb:DiamondCommonInformation Name="InfoBox" Application="[Application]" Visible="[ThemeConfig.InfoBoxThumbstrip]"
                                             Item="[SelectedItem]" MaximumSize="0,0" FullMode="false" DisableInput="true">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent, 1, -475" Right="Parent, 1, -25" Bottom="Focus, 0, -50" />
            </LayoutInput>
          </dtb:DiamondCommonInformation>

          <!-- Coverflow Scroller -->
          <me:CoverflowScroller Name="CFScroller" Application="[Application]" LayoutInput="[AnchorNormal]" Folder="[Folder]" />

          <!-- Coverflow Arc -->
          <Graphic Name="ArcImg" Content="image://i:DiamondCFArc">
            <LayoutInput>
              <AnchorLayoutInput Bottom="Parent, 1, 30" Left="Parent, 0, -50"
                                 Top="Parent, 1,-150" Right="Parent, 1, 50"/>
            </LayoutInput>
          </Graphic>

          <!-- Backdrop -->
          <bd:Backdrop4 Name="Backdrop" Visible="[Application.Config.ShowBackdrop]"
                        Image="[Folder.BackdropImage]" Item="[Folder]"
                        LayoutInput="global://dtb:LI_Bg"/>

        </Children>
      </Panel>

    </Content>

  </UI>


  <UI Name="CoverflowScroller">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
    </Properties>

    <Locals>
      <!--<cor:Int32 Name="InitialFocusIndex" Int32="[Folder.SelectedChildIndex]"/>
      <cor:Boolean Name="InitialFocusSet" Boolean="false"/>
      <Timer Name="CheckInitialFocus" AutoRepeat="false" Interval="20" Enabled="false"/>-->

      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>
      <ScrollingData Name="SD" LockedAlignment="0.5" LockedPosition="0.5"/>
      <IntRangedValue Name="SelectRepeaterIndex"/>
      <GridLayout Name="MyLayout" Orientation="Horizontal" AllowWrap="true"
                  Spacing="-10,0" Repeat="WhenTooBig"
                  RepeatGap="[Application.Config.GridSpacing.Width]" Rows="1" MinorAlignment="Far" />

      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
      <ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>
      <IntRangedValue Name="NavCount" Value="0" />
      <cor:Int32 Name="NormalKeyRepeat" Int32="20"/>
      <!-- This must be less than anim delay -->
      <cor:Int32 Name="FastKeyRepeat" Int32="10"/>
      <cor:Int32 Name="AnimDelay" Int32="30" />
      <!-- This must be greater than NormalKeyRepeat-->
      <cor:Int32 Name="SpeedUpDelay" Int32="2"/>
    </Locals>

    <Rules>

      <Default Target="[ScrollingHandler.ScrollingData]" Value="[SD]"/>
      <Default Target="[SD.Repeater]" Value="[CoverRepeater]"/>
      <Default Value="[MyLayout]" Target="[CoverRepeater.Layout]"/>

      <!-- Auto Focus Bindings -->
      <!--<Rule>
        <Conditions>
          <Equality Source="[InitialFocusSet]" Value="false"/>
          <IsValid Source="[InitialFocusIndex]"/>
          <Equality Source="[InitialFocusIndex]" ConditionOp="GreaterThanOrEquals" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke InvokePolicy="Synchronous" Target="[CoverRepeater.NavigateIntoIndex]" index="[InitialFocusIndex]"/>
          <Set Target="[InitialFocusSet]" Value="true"/>
          <Set Target="[CheckInitialFocus.Enabled]" Value="true"/>
        </Actions>
      </Rule>
      <Changed Source="[CheckInitialFocus.Tick]">
        <Conditions>
          <Equality Source="[Folder.SelectedChildIndex]" ConditionOp="NotEquals" Value="[InitialFocusIndex]"/>
        </Conditions>
        <Actions>
          <Invoke InvokePolicy="Synchronous" Target="[SD.Home]"/>
          <Invoke InvokePolicy="Synchronous" Target="[SD.Scroll]" amount="[InitialFocusIndex]"/>
          <Invoke InvokePolicy="Synchronous" Target="[CoverRepeater.NavigateIntoIndex]" index="[InitialFocusIndex]"/>          
        </Actions>
      </Changed>-->


      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageUp]"/>
        </Actions>
      </Rule>

      <Changed Source="[Application]" InitialEvaluate="true">
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="[SpeedUpDelay]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[FastKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>
      


      <!-- Update cover repeater on items change. -->
      <Changed Source="[Folder.Children]">
        <Actions>
          <Set Target="[CoverRepeater.Source]" Value="[Folder.Children]" />
          <Set  Target="[Folder.SelectedChildIndex]" Value="-1"/>
        </Actions>
      </Changed>


      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Modified Source="[Application]" InitialEvaluate="true"/>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[CoverRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Rule>

      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[SD.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>

      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageUp]"/>
        </Actions>
      </Rule>


      <!-- Cover width above 145px -->

      <!-- Hide focus frame image -->
      <Condition Source="[Application.Config.HideFocusFrame]" ConditionOp="Equals" SourceValue="true"
                 Target="[FocusRect.FocusImage]" Value="image://i:BlankImage" />

    </Rules>

    <Content>
      <!-- Coverflow Scroller -->
      <Panel Name="Panel" Navigation="ContainHorizontal" Layout="Anchor" >
        <Children>

          <fs:FocusSelector Name="FocusRect" FocusImage="image://i:ZoomPane" Scaling="1.3,1.3,1.3" >
            <LayoutInput>
              <FormLayoutInput Left="Focus,0,-2" Right="Focus,1,2"
											 Top="Focus,0,-2" Bottom="Focus,1,2"
											 ContributesToHeight="false"
											 ContributesToWidth="false"/>
            </LayoutInput>
          </fs:FocusSelector>
          
          <Scroller Name="Scroller" Orientation="Horizontal" FadeSize="-20" ScrollingData="[SD]"
                    Navigation="RememberFocus" >
            <LayoutInput>
              <AnchorLayoutInput Horizontal="Fill"  Bottom="Parent,1"/>
            </LayoutInput>
            <Children>
              <Repeater Name="CoverRepeater" Source="[Folder.Children]" Layout="[MyLayout]"
                        DiscardOffscreenVisuals="true" Navigation="FlowHorizontal">

                <Content>
                  <pvi:SimplePoster
                        Application="[Application]"
                        ParentItem="[Folder]"
                        ItemIndex="[RepeatedItemIndex]"
                        Item="[RepeatedItem!lib:Item]"
                        SelectRepeaterIndex="[SelectRepeaterIndex]"
                        ImageSize="[Folder.ActualThumbSize]"
                        AnimDelay="[AnimDelay]" NavCount="[NavCount]"
                        UnwatchedCountFont="font://f:CV_UnwatchedCountFont"
                        ShowLabels="[Folder.DisplayPrefs.ShowLabels]"
                        TopLabelFont="font://f:CV_PosterTopLabelFont" />
                  <!--<pvi:MediaItemPoster
                        Application="[Application]"
                        ParentItem="[Folder]"
                        ItemIndex="[RepeatedItemIndex]"
                        Item="[RepeatedItem!lib:Item]"
                        SelectRepeaterIndex="[SelectRepeaterIndex]"
                        ImageSize="[Folder.ActualThumbSize]"
                        AnimDelay="[AnimDelay]" NavCount="[NavCount]"
                        UnwatchedCountFont="font://f:CV_UnwatchedCountFont"
                        ShowLabels="[Folder.DisplayPrefs.ShowLabels]"
                        TopLabelFont="font://f:CV_PosterTopLabelFont" />-->
                </Content>

                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                      <PositionKeyframe Time="0.95" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Repeater>
            </Children>
          </Scroller>
        </Children>
      </Panel>
    </Content>
  </UI>


  <Image Name="PosterFrame" Source="resx://MediaBrowser/MediaBrowser.Resources/poster_frame" NineGrid="10,10,10,10" />
</Mcml>
