<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
    xmlns:cor="assembly://MSCorLib/System"
    xmlns:a="assembly://MediaBrowser/MediaBrowser"
    xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
    xmlns:fs="resx://MediaBrowser/MediaBrowser.Resources/FocusSelector"
    xmlns:pvi="resx://MediaBrowser/MediaBrowser.Resources/PosterViewItem"
    xmlns:s="file://Styles_DoNotEdit.mcml"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
    xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
      xmlns:ib="resx://MediaBrowser/MediaBrowser.Resources/ItemButton"
    xmlns:me="Me"
	  >

  <UI Name="BannerScroller">

    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <cor:Int32 Name="RowLimit"  />
      <cor:Boolean Name="NoEndPadding" Boolean="false" />
      <Font Name="TopLabelFont" Font="$Required"/>
      <Font Name="LabelFont" Font="$Required"/>
      <Font Name="UnwatchedCountFont" Font="$Required"/>
      <cor:Boolean Name="CenterFocus" Boolean="false" />
    </Properties>
    <Locals>
      <!-- Use the MouseWheel handler to handle the mouse wheel.  -->
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>
      <ScrollingData Name="ScrollingData" LockedAlignment="0.5" LockedPosition="0.5"/>

      <Environment Name="Environment" />

      <GridLayout Name="MyLayout" Orientation="Vertical" Columns="1" AllowWrap="false" Spacing="[Application.Config.GridSpacing]" MinorAlignment="Center" MajorAlignment="Center" />

      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
      <ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>
      <IntRangedValue Name="NavCount" Value="0" />

      <cor:Int32 Name="NormalKeyRepeat" Int32="150"/>
      <!-- This must be less than anim delay -->

      <cor:Int32 Name="FastKeyRepeat" Int32="75"/>

      <cor:Int32 Name="AnimDelay" Int32="200" />
      <!-- This must be greater than NormalKeyRepeat-->

      <cor:Int32 Name="SpeedUpDelay" Int32="7"/>
      <!--The number of items to got across at normal speed before speeding up -->
      <FormLayoutInput Name="HLayout" Horizontal="Fill" Vertical="Center"/>
      <FormLayoutInput Name="VLayout" Horizontal="Center" Vertical="Fill"/>
    </Locals>


    <Rules>
      <!--These rules allow the user to move over the posters with the mouse without them scrolling away under them-->
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.IsMouseActive]" Value="true"/>
          <Equality Source="[NoEndPadding]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[ScrollingData.LockedPosition]" Value="-1" />
          <Set Target="[ScrollingData.LockedAlignment]" Value="-1" />
          <Set Target="[ScrollingData.BeginPadding]" Value="30" />
          <Set Target="[ScrollingData.EndPadding]" Value="30" />
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.IsMouseActive]" Value="false"/>
          <Equality Source="[CenterFocus]" Value="false" />
          <Equality Source="[NoEndPadding]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[ScrollingData.BeginPadding]" Value="100" />
          <Set Target="[ScrollingData.EndPadding]" Value="400" />
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.IsMouseActive]" Value="false"/>
          <Equality Source="[CenterFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[ScrollingData.LockedAlignment]" Value=".5" />
          <Set Target="[ScrollingData.LockedPosition]" Value=".5" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ScrollingData.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ScrollingData.PageUp]"/>
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Modified Source="[Application]" InitialEvaluate="true"/>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[MyRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Rule>

      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[ScrollingData.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>

      <Changed Source="[Application]" InitialEvaluate="true">
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="[SpeedUpDelay]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[FastKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <!-- Give ScrollingData to ScrollingHandler. -->
      <Binding Target="[ScrollingHandler.ScrollingData]" Source="[ScrollingData]"/>
      <Binding Target="[Scroller.ScrollingData]" Source="[ScrollingData]" />
      <!-- Give Repeater to ScrollingData. -->
      <Default Target="[ScrollingData.Repeater]" Value="[MyRepeater]"/>
      <Binding Target="[MyRepeater.Source]" Source="[Folder.Children]" />
    </Rules>

    <Content>
      <Panel Name="ItemPanel" Layout="Anchor">
        <Children>
          <fs:FocusSelector Name="FocusRect">
            <LayoutInput>
              <FormLayoutInput Left="Focus,0,-3" Right="Focus,1,3"
											 Top="Focus,0,-3" Bottom="Focus,1,3"
											 ContributesToHeight="false"
											 ContributesToWidth="false"/>
            </LayoutInput>

          </fs:FocusSelector>
          <Scroller Orientation="Vertical" FadeSize="1" Name="Scroller" Navigation="RememberFocus" ScrollingData="[ScrollingData]">
            <Children>
              <Repeater Source="[Folder.Children]" Name="MyRepeater" ContentName="BaseItem" DiscardOffscreenVisuals="true" >
                <Layout>
                  <FlowLayout Orientation="Vertical" Repeat="WhenTooBig" ItemAlignment="Near" Spacing="0,0"/>
                </Layout>
                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current"/>
                      <PositionKeyframe Time="0.15" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Repeater>
            </Children>
          </Scroller>
        </Children>
      </Panel>
    </Content>
    <Content Name="BaseItem">
      <me:BannerViewItem  AnimDelay="[AnimDelay]" NavCount="[NavCount]"
                          ShowLabels="[Folder.DisplayPrefs.ShowLabels]" Application="[Application]" Index="[RepeatedItemIndex]"
                          Item="[RepeatedItem!lib:Item]" ParentItem="[Folder]" TopLabelFont="[TopLabelFont]"
                          LabelFont="[LabelFont]" UnwatchedCountFont="[UnwatchedCountFont]"/>
    </Content>
  </UI>

  <UI Name="BannerViewItem" BaseUI="ib:ItemButton">
    <Properties>
      <lib:FolderModel Name="ParentItem" FolderModel="$Required"/>
      <lib:Item Name="Item" Item="$Required"/>
      <a:Application Name="Application" Application="$Required"/>
      <BooleanChoice Name="ShowLabels" BooleanChoice="$Required" />
      <!--<lib:SizeRef Name="ImageSize" SizeRef="$Required"/>-->
      <Index Name="Index" Index="$Required"/>
      <Image Name="FocusImage" Image="image://i:ZoomPane"/>
      <Image Name="FolderImage" Image="image://i:Folder"/>
      <Image Name="BlankImage" Image="null"/>
      <Size Name="MinSize" />
      <Size Name="ImageSize" Size="0,70" />
      <IntRangedValue Name="NavCount" IntRangedValue="$Required" />
      <cor:Int32 Name="AnimDelay" Int32="200" />
      <Font Name="TopLabelFont" Font="$Required"/>
      <Font Name="LabelFont" Font="$Required"/>
      <Font Name="UnwatchedCountFont" Font="$Required"/>
    </Properties>

    <Locals>
      <Timer Name="AnimTimer" Interval="[AnimDelay]" Enabled="false" AutoRepeat="false"/>
      <BooleanChoice Name="InFocus" Value="false" />
      
    </Locals>

    <Rules>

      <Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>
      <Binding Source="[ParentItem.DisplayPrefs.UseBanner.Value]" Target="[Item.PreferBanner]" />
      <!--<Binding Source="[ImageSize.Value]" Target="[Item.PreferredImageSmallSize]" />-->
      <Binding Source="[ShowLabels.Value]" Target="[BelowLabelPanel.Visible]" />
      <Binding Source="[Item.PreferredImageSmall]" Target="[BoxArt.Content]"/>
      <Binding Source="[Item.HaveWatched]" Target="[TickPanel.Visible]" />
      <Binding Source="[Item.UnwatchedCountString]" Target="[UnwatchedCount.Content]" />
      <Binding Source="[Item.ShowUnwatched]" Target="[UnwatchedIndicator.Visible]" />
      <Binding Source="[Item.Name]" Target="[BelowLabelPanel.Content]" />
      <Binding Source="[Item.Name]" Target="[Label.Content]" />

      <Condition Source="[Item.ParentalAllowed]" ConditionOp="Equals" SourceValue="false" Target="[PCLock.Visible]" Value="true" />

      <Changed Source="[Item.HaveWatched]">
        <Conditions>
          <Equality Source="[Item.HaveWatched]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Application.Config.ShowWatchedTickOnFolders]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[TickPanel.Visible]" Value="true" />
        </Actions>
      </Changed>
      <Changed Source="[Application.Config.ShowWatchedTickOnFolders]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchedTickOnFolders]" />
        </Actions>
      </Changed>

      <Changed Source="[Application.Config.ShowWatchTickInPosterView]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchTickInPosterView]" />
        </Actions>
      </Changed>

      <Changed Source="[Item.ShowUnwatched]">
        <Actions>
          <Set Target="[UnwatchedCount.Content]" Value="[Item.UnwatchedCountString]" />
        </Actions>
      </Changed>
      <Default Target="[Label.Visible]" Value="true">
        <Conditions>
          <Equality Source="[Item.HasPreferredImage]" ConditionOp="Equals" Value="false" />
          <Equality Source="[ShowLabels.Value]" ConditionOp="Equals" Value="false" />
        </Conditions>
      </Default>
      <Changed Source="[Item.HasPreferredImage]">
        <Conditions>
          <Equality Source="[ShowLabels.Value]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[Label.Visible]" Value="[Item.HasPreferredImage]">
            <Transformer>
              <BooleanTransformer Inverse="true"/>
            </Transformer>
          </Set>
        </Actions>
      </Changed>

      <Condition Source="[Application.Config.DimUnselectedPosters]" ConditionOp="Equals" SourceValue="false" Target="[ConstraintPanel.ColorFilter]" Value="White" />
      <Condition Source="[Application.Config.DimUnselectedPosters]" ConditionOp="Equals" SourceValue="false" Target="[ConstraintPanel.Alpha]" Value="1" />

      <Condition Source="[InFocus.Value]" SourceValue="true">
        <Actions>
          <Set Target="[BoxItem.Alpha]" Value="1"/>
          <!--<Set Target="[BelowLabelPanel.Alpha]" Value="1" />-->
          <Set Target="[BoxItem.Content]" Value="color://s:PosterZoomBackground"/>
          <Set Target="[BoxArt.Content]" Value="[Item.PreferredImage]"/>
          <Set Target="[BoxArt.Alpha]" Value="1"/>
          <Set Target="[ConstraintPanel.ColorFilter]" Value="White" />
          <Set Target="[ConstraintPanel.Alpha]" Value="1" />
          <!--<Set Target="[BoxArt.MaintainAspectRatio]" Value="[Item.SmallImageIsDistorted]">
            <Transformer>
              <BooleanTransformer Inverse="true"/>
            </Transformer>
          </Set>-->
        </Actions>
      </Condition>

      <Changed Source="[Item.PreferredImage]">
        <Conditions>
          <Equality  Source="[InFocus.Value]" Value="true"/>
        </Conditions>
        <Actions>
          <!--<Set Target="[BoxArt.MaintainAspectRatio]" Value="[Item.SmallImageIsDistorted]">
            <Transformer>
              <BooleanTransformer Inverse="true"/>
            </Transformer>
          </Set>-->
          <Set Target="[BoxArt.Content]" Value="[Item.PreferredImage]"/>
        </Actions>

      </Changed>
      <Binding Target="[BoxArt.MaintainAspectRatio]" Source="[Item.SmallImageIsDistorted]">
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
      </Binding>
      <Condition Source="[InFocus.Value]" SourceValue="false">
        <Actions>
          <Set Target="[BoxArt.Content]" Value="[Item.PreferredImageSmall]"/>
        </Actions>
      </Condition>


      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[AnimTimer.Stop]" />
          <Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
            <Transformer>
              <MathTransformer Add="1"/>
            </Transformer>
          </Set>
          <Set Target="[InFocus.Value]" Value="false"/>
        </Actions>
      </Changed>

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Invoke Target="[AnimTimer.Start]" />
          <Set Target="[ParentItem.SelectedChildIndex]" Value="[Index.SourceValue]"/>
        </Actions>
      </Changed>

      <Changed Source="[AnimTimer.Tick]">
        <Actions>
          <Set Target="[InFocus.Value]" Value="true"/>
          <Set Target="[NavCount.Value]" Value="0" ExclusiveApply="false"/>
        </Actions>
      </Changed>


      <!-- Accessibility 
			  <Binding Target="[Accessible.IsPressed]"            Source="[Clicker.Clicking]"/>
			  <Binding Target="[Accessible.IsFocusable]"          Source="[Input.KeyInteractive]"/>
			  <Binding Target="[Accessible.IsFocused]"            Source="[Input.KeyFocus]"/>
			  <Binding Target="[Accessible.Name]"                 Source="[Model.Description]"/>
			  <Default Target="[Accessible.DefaultActionCommand]" Value="[Model]"/>
			  <Default Target="[Accessible.DefaultAction]"        Value="Press"/>
			  <Default Target="[Accessible.Role]"                 Value="PushButton"/>-->

      <Binding Source="[ImageSize]" Target="[ConstraintPanel.MaximumSize]" />
      <Binding Source="[ImageSize]" Target="[BelowLabelPanel.MaximumSize]" />
      <Binding Source="[ImageSize]" Target="[ConstraintPanel.MinimumSize]" />
      <Binding Source="[Item.IsHD]" Target="[HDIndicator.Visible]" />
      <Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="720" Target="[HDImage.Content]" Value="image://i:HDLogo720" />
      <Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="1080" Target="[HDImage.Content]" Value="image://i:HDLogo1080" />
    </Rules>

    <Content>

      <Graphic Name="MainPanel" Content="[BlankImage]" Scale="1.0,1.0,1.0" SizingPolicy="SizeToChildren">
        <Children>
          <ColorFill Name="BoxItem" Content="Transparent" Alpha="1" Padding="0,0,0,0" >
            <Layout>
              <AnchorLayout SizeToHorizontalChildren="true" SizeToVerticalChildren="true"/>
            </Layout>

            <Children>

              <ColorFill Content="Transparent" >
                <LayoutInput>
                  <AnchorLayoutInput Horizontal="Center" ContributesToWidth="true"/>
                </LayoutInput>
                <Layout>
                  <FlowLayout Orientation="Vertical" ItemAlignment="Center"/>
                </Layout>
                <Children>
                  <Text Name="BelowLabelPanel" Margins="0,5,0,-3" Alpha="1" Color="color://s:FontColorLight"  Font="[TopLabelFont]" Content="[Item.Name]" WordWrap="false" HorizontalAlignment="Near">
                  </Text>
                  <Panel Name="ConstraintPanel" Padding="0,0,0,0" MaximumSize="[ImageSize]" MinimumSize="[ImageSize]" ColorFilter="color://s:DimPosterFilter" Alpha="global://s:PosterDimAlpha" >
                    <Layout>
                      <AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
                    </Layout>
                    <Children>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Alpha="0.8" Name="TickIndicatorPanel" Visible="[Item.HaveWatched]" MaximumSize="32,32" Margins="5,5,0,0">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                        <Children>
                          <Panel Name="TickPanel" Layout="Center">
                            <Children>
                              <Graphic Content="image://i:TickPoster"  MaximumSize="30,30"  />
                              <Graphic Content="image://i:TickPosterBase" ColorFilter="color://s:FilterColor" MaximumSize="30,30"  Visible="global://s:ShowWatchedMarkerBackgrounds" />
                            </Children>
                          </Panel>
                        </Children>
                      </Panel>
                      <Panel  Margins="2,2,0,0" Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Name="UnwatchedIndicator" MaximumSize="47,47" >
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                        <Children>
                          <Text Name="UnwatchedCount" Content="" Color="color://s:FontColorLight" Font="[UnwatchedCountFont]" Margins="0,0,-3,-10"></Text>
                          <Graphic Content="image://i:Unwatched"  MinimumSize="45,45" MaximumSize="45,45" MaintainAspectRatio="true" Layout="Center" ></Graphic>
                          <Graphic Visible="global://s:ShowWatchedMarkerBackgrounds" ColorFilter="color://s:FilterColor" Content="image://i:UnwatchedBase" MinimumSize="45,45" MaximumSize="45,45"  MaintainAspectRatio="true" Layout="Center" ></Graphic>
                        </Children>
                      </Panel>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="HDIndicator">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Far" Vertical="Far"/>
                        </LayoutInput>
                        <Children>
                          <Graphic Name="HDImage" Content="image://i:HDLogo" Margins="0,0,5,5" MaximumSize="48,35" MaintainAspectRatio="true">
                            <LayoutInput>
                              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                            </LayoutInput>
                          </Graphic>
                        </Children>
                      </Panel>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="PCLock">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Far"/>
                        </LayoutInput>
                        <Children>
                          <Graphic Name="PCLockImage" Content="image://i:Lock" Margins="0,0,5,5" MaximumSize="30,30" MaintainAspectRatio="true">
                            <LayoutInput>
                              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                            </LayoutInput>
                          </Graphic>
                        </Children>
                      </Panel>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Fill" Vertical="Fill"/>
                        </LayoutInput>
                        <Children>
                          <Text Alpha="1" Name="Label" Visible="false" Color="color://s:FontColorLight" Font="[LabelFont]"
														Content="[Item.Name]"  WordWrap="true" Margins="5,5,5,5"  HorizontalAlignment="Center">

                          </Text>
                        </Children>
                      </Panel>

                      <Graphic  Name="BoxArt"  Alpha="0.4" Scale="1,1,1" Padding="0,0,0,0" SizingPolicy="SizeToConstraint"  MaintainAspectRatio="true" >
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Center"/>
                          <!--<AnchorLayoutInput Horizontal="Fill" Vertical="Fill"/>-->
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                </Children>

              </ColorFill>

            </Children>
          </ColorFill>

        </Children>
      </Graphic>
    </Content>
  </UI>
</Mcml>
