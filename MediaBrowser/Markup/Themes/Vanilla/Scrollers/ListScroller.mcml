<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:cor="assembly://MSCorLib/System"
    xmlns:lb="resx://MediaBrowser/MediaBrowser.Resources/ListButton"
    xmlns:a="assembly://MediaBrowser/MediaBrowser"
    xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
	  xmlns:s="file://Styles_DoNotEdit.mcml"
    xmlns:f="file://Fonts_DoNotEdit.mcml"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
    xmlns:ib="resx://MediaBrowser/MediaBrowser.Resources/ItemButton"
    xmlns:gl="resx://MediaBrowser/MediaBrowser.Resources/GenreList"
    xmlns:an="resx://MediaBrowser/MediaBrowser.Resources/Animations"
    xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
    xmlns:sr="resx://MediaBrowser/MediaBrowser.Resources/StarRating"
    xmlns:vidb="resx://MediaBrowser/MediaBrowser.Resources/VanillaInfoDisplayBox"
    xmlns:me="Me" >

	<UI Name="ListScroller">

		<Properties>
			<a:Application Name="Application" Application="$Required"/>
			<lib:FolderModel Name="Folder" FolderModel="$Required"/>
			<Font Name="Font" Font="Segoe Media Center Semibold,18" />
      <Size Name="Size" Size="0,60"/>
		</Properties>

		<Locals>
			<!-- Use the MouseWheel handler to handle the mouse wheel.  -->
			<ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true"
							  HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>

			<ScrollingData Name="ScrollingData" />
			<IntRangedValue Name="SelectedIndex" Value="0"/>
		</Locals>

		<Rules>

		
			<!-- Give ScrollingData to ScrollingHandler. -->
			<Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>

			<!-- Give Repeater to ScrollingData. -->
			<Default Target="[ScrollingData.Repeater]" Value="[MyRepeater]"/>

			<Binding Source="[Folder.Children]" Target="[MyRepeater.Source]"/>
			<Rule ConditionLogicalOp="And">
				<Conditions>
					<Modified Source="[Application]" InitialEvaluate="true"/>
					<Equality Source="[Application.NavigatingForward]" Value="true"/>
					<Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
				</Conditions>
				<Actions>
					<Invoke Target="[MyRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
				</Actions>
			</Rule>
			<Changed Source="[Folder.JILShift]">
				<Actions>
					<Invoke Target="[ScrollingData.Scroll]"  amount="[Folder.JILShift]"/>
				</Actions>
			</Changed>

			<Changed Source="[Application]" InitialEvaluate="true">
				<Actions>
					<Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val ="50" />
				</Actions>
			</Changed>

		</Rules>

		<Content>
			<Panel>
				<Children>

					<!-- List Repeater -->
          <Scroller Orientation="Vertical" FadeSize="1" Name="Scroller" Navigation="RememberFocus" ScrollingData="[ScrollingData]">
            <Children>
              <Repeater Source="[Folder.Children]" Name="MyRepeater" ContentName="BaseItem" >
                <Layout>
                  <FlowLayout Orientation="Vertical" ItemAlignment="Near" Spacing="0,0"/>
                </Layout>
                <Divider>
                  <Clip FadeSize="150" Orientation="Horizontal" FadeAmount="1" >
                    <Children>
                      <ColorFill Content="White" Alpha="0.8" Layout="Fill" MaximumSize="0,1" />
                    </Children>
                  </Clip>
                </Divider>
                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current"/>
                      <PositionKeyframe Time="0.2" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Repeater>
            </Children>

          </Scroller>
				</Children>
			</Panel>
		</Content>
		<Content Name="BaseItem">
			<me:VanillaListButton Application="[Application]" Index="[RepeatedItemIndex]" ParentItem="[Folder]" Item="[RepeatedItem!lib:Item]" SelectedIndex="[SelectedIndex]" Font="[Font]" Size="[Size]"/>
		</Content>
	</UI>

  <UI Name="VanillaListButton" BaseUI="ib:ItemButton">

    <Properties>
      <IntRangedValue Name="SelectedIndex" IntRangedValue="$Required"/>
      <lib:FolderModel Name="ParentItem" FolderModel="$Required"/>
      <cor:String Name="Text" String="" />
      <Index Name="Index" Index="$Required"/>
      <Font Name="Font" Font="$Required"/>
      <Size Name="Size" Size="0,60"/>
    </Properties>

    <Locals>
      <Image Name="ImageFocus"   Image="image://me:ButtonFocus" />
      <Image Name="ImageNoFocus" Image="image://me:ButtonNoFocus" />
      <Color Name="Color"        Color="color://s:FontColorMedium" />
      <Color Name="FocusColor"   Color="color://s:FontColorLight" />
      <Timer Name="AnimTimer" Interval="1000" Enabled="false" AutoRepeat="false"/>
      <BooleanChoice Name="InFocus" Value="false" />
    </Locals>

    <Rules>
      <Default Target="[Input.KeyInteractive]" Value="true" />

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[AnimTimer.Stop]" />       
          <Set Target="[SelectedIndex.Value]" Value="[SelectedIndex.Value]" ExclusiveApply="false">
            <Transformer>
              <MathTransformer Add="1"/>
            </Transformer>
          </Set>
          <Set Target="[InFocus.Value]" Value="false"/>
        </Actions>
      </Changed>

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Invoke Target="[AnimTimer.Start]" />
          <Set Target="[imgButton.Content]" Value="[ImageFocus]"/>
          <!--<Set Target="[Label.Color]" Value="[FocusColor]" />-->
          <PlaySound Sound="sound://sounds:Focus" />
          <Set Target="[ParentItem.SelectedChildIndex]" Value="[Index.SourceValue]"/>
        </Actions>
      </Changed>

      <Changed Source="[AnimTimer.Tick]">
        <Actions>
          <Set Target="[InFocus.Value]" Value="true"/>
          <Set Target="[SelectedIndex.Value]" Value="0" ExclusiveApply="false"/>
        </Actions>
      </Changed>
      
      <Binding Target="[InfoBox.Font]"  Source="[Font]"/>
      <!-- Watched Status Indicator -->

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.Config.EnableListViewTicks]" ConditionOp="Equals" Value="true"/>
          <Equality Source="[Item.HaveWatched]" ConditionOp="Equals" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[TickIndicator.Visible]" Value="true"/>
        </Actions>
      </Rule>

    </Rules>

    <Content>
      <Graphic Name="imgButton"  Content="[ImageNoFocus]" MouseInteractive="true" MaximumSize="[Size]" MinimumSize="[Size]" HorizontalAlignment="Near" VerticalAlignment="Fill" MaintainAspectRatio="false"        >
        <Layout>
          <FlowLayout Orientation="Horizontal" ItemAlignment="Center"/>
        </Layout>
        <Children>
          <Graphic  Name="TickIndicator" Visible="false" Content="image://me:Counter" Layout="Center" MaximumSize="35,35">
            <Children>
              <Graphic Content="image://i:Tick"/>
            </Children>
          </Graphic>
          <vidb:InfoDisplayBox Name="InfoBox" Application="[Application]" Item="[Item]" Font="[Font]"/>
        </Children>
      </Graphic>
    </Content>
  </UI>

  <Image Name="ButtonFocus"   Source="resx://MediaBrowser/MediaBrowser.Resources/rootscrollhilitefocus" NineGrid="10,10,10,10" />
  <Image Name="ButtonNoFocus" Source="resx://MediaBrowser/MediaBrowser.Resources/ButtonNoFocus"         NineGrid="7,7,7,7"/>
  <Image Name="Counter"       Source="resx://MediaBrowser/MediaBrowser.Resources/VanillaCounter"/>
</Mcml>
