<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:cor="assembly://MSCorLib/System"
	  
	  xmlns:a="assembly://MediaBrowser/MediaBrowser"
	  xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
	  xmlns:ps="resx://MediaBrowser/MediaBrowser.Resources/PosterScroller"
	  xmlns:ip="resx://MediaBrowser/MediaBrowser.Resources/ItemPoster"
	  xmlns:mi="resx://MediaBrowser/MediaBrowser.Resources/MovieInfo"
	  xmlns:lw="resx://MediaBrowser/MediaBrowser.Resources/LastWatched"
	  xmlns:ts="resx://MediaBrowser/MediaBrowser.Resources/TitleSet"
	  xmlns:sy="resx://MediaBrowser/MediaBrowser.Resources/Summary"
	  xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
	  xmlns:s="file://Styles_DoNotEdit.mcml"
	  xmlns:f="file://Fonts_DoNotEdit.mcml"
	  xmlns:bd="resx://MediaBrowser/MediaBrowser.Resources/Backdrop"
      xmlns:me="Me"
	  >


	<UI Name="CoverflowView">
		<Properties>
			<a:Application Name="Application" Application="$Required"/>
			<lib:Item Name="Item" Item="$Required"/>

		</Properties>

		<Locals>
			<lib:Item Name="SelectedItem" Item="[Item.SelectedChild]" />
			<lib:Item Name="PreSelectedItem" Item="[Item.SelectedChild]" />
			<lib:Item Name="PreviousSelectedItem" Item="[Item.SelectedChild]" />
			<lib:Item Name="BlankItem"  Item="[Item.BlankItem]"/>
			<Timer Name="FullDetailsTimer" Interval="300" AutoRepeat="false"/>

			<cor:Int32 Name="CurrentItemIndex" Int32="0"/>
			<BooleanChoice Name="Vertical" Value="false" />

			<ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true"
							  HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>

			<ScrollingData Name="SD" LockedAlignment="0.5" LockedPosition="0.5"/>

			<MathTransformer Name="Add1" AddInt="1"/>
			<IntRangedValue Name="SelectRepeaterIndex"/>
			<ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
			<ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>
			<GridLayout Name="MyLayout" Orientation="Horizontal" AllowWrap="true" Spacing="-60,0" 
                  Repeat="WhenTooBig" RepeatGap="30" Rows="1" MinorAlignment="Center" />
		</Locals>

		<Rules>
			<Default Target="[ScrollingHandler.ScrollingData]" Value="[SD]"/>
			<Default Target="[SD.Repeater]" Value="[CoverRepeater]"/>

			<Binding Source="[SelectedItem]" Target="[TitleSet.Model]"/>
			<Binding Source="[PreSelectedItem]" Target="[TitleSet.ModelFast]"/>
			<Binding Source="[SelectedItem]" Target="[MovieInfo.Model]"/>
			<Binding Source="[PreSelectedItem]" Target="[MovieInfo.ModelFast]"/>
      <Binding Source="[MyLayout]" Target="[CoverRepeater.Layout]"/>      
      
      <!-- Update cover repeater on items change. -->
      <Changed Source="[Item.Children]">
        <Actions>
          <Set Target="[CoverRepeater.Source]" Value="[Item.Children]" />
          <Set  Target="[Item.SelectedChildIndex]" Value="-1"/>
        </Actions>        
      </Changed>

			<Changed Source="[Item.SelectedChildIndex]" InitialEvaluate="true">
				<Conditions>
					<Equality ConditionOp="NotEquals" Source="[Item.SelectedChildIndex]" Value="-1"></Equality>
				</Conditions>
				<Actions>
					<Invoke Target="[FullDetailsTimer.Stop]" />
					<Invoke Target="[FullDetailsTimer.Start]" />
					<Set Target="[SelectedItem]"  Value="[BlankItem]" />
					<Set Target="[PreSelectedItem]"  Value="[Item.SelectedChild]" />
				</Actions>
			</Changed>

			<Rule ConditionLogicalOp="And">
				<Conditions>
					<Modified Source="[Application]" InitialEvaluate="true"/>
					<Equality Source="[Application.NavigatingForward]" Value="true"/>
					<Equality Source="[Item.Children.Count]" ConditionOp="GreaterThan" Value="0" />
				</Conditions>
				<Actions>
					<Invoke Target="[CoverRepeater.NavigateIntoIndex]"  index="[Item.FirstUnwatchedIndex]"/>
				</Actions>
			</Rule>

			<Changed Source="[Item.JILShift]">
				<Actions>
					<Invoke Target="[SD.Scroll]"  amount="[Item.JILShift]"/>
				</Actions>
			</Changed>

			<Rule>
				<Conditions>
					<Modified Source="[JumpForward.Invoked]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[SD.PageDown]"/>
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Modified Source="[JumpBack.Invoked]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[SD.PageUp]"/>
				</Actions>
			</Rule>
			
			<Changed Source="[Item.SelectedChildIndex]">
				<Conditions>
					<Equality ConditionOp="Equals" Source="[Item.SelectedChildIndex]" Value="-1"></Equality>
				</Conditions>
				<Actions>
					<Set Target="[SelectedItem]"  Value="[BlankItem]" />
					<Set Target="[PreSelectedItem]"  Value="[BlankItem]" />
					<Set Target="[PreviousSelectedItem]"  Value="[BlankItem]" />
				</Actions>
			</Changed>

			<Changed Source="[FullDetailsTimer.Tick]">
				<Actions>
					<Set Target="[SelectedItem]" Value="[PreSelectedItem]"/>
					<Set Target="[PreviousSelectedItem]" Value="[PreSelectedItem]"/>
				</Actions>
			</Changed>

			<!-- Counter Bindings -->
			<Binding Source="[Item.SelectedChildIndex!cor:String]" Transformer="[Add1]" Target="[List_Counter.Content]" />
			<Binding Source="[Item.Children.Count]" Target="[List_Total.Content]" >
				<Transformer>
					<FormatTransformer Format=" | {0}" />
				</Transformer>
			</Binding>
      
      <!-- Cover width above 145px -->
			<Rule>
        <Conditions>
          <Equality Source="[Item.ActualThumbSize.Value.Width]" ConditionOp="GreaterThanOrEquals" Value="145"/>
        </Conditions>
				<Actions>
					<Set Target="[MyLayout.Spacing.Width]" Value="[Item.ActualThumbSize.Value.Width]">
						<Transformer>
							<MathTransformer Multiply="-0.3"/>
						</Transformer>
					</Set>       
				</Actions>
			</Rule>
      <!-- Cover width below 145px -->
      <Rule>
        <Conditions>
          <Equality Source="[Item.ActualThumbSize.Value.Width]" ConditionOp="LessThan" Value="145"/>
        </Conditions>
        <Actions>
          <Set Target="[MyLayout.Spacing]" Value="0,0" />
        </Actions>
      </Rule>
    
    </Rules>

		<Content>
			<Panel Layout="Form">
				<Children>

					<!-- Title Details -->
					<Panel>
						<Layout>
							<FlowLayout Orientation="Vertical" ItemAlignment="Center"/>
						</Layout>
						<LayoutInput>
							<AnchorLayoutInput Top="Parent, 0.8" Left="Parent, 0.5,-350" Right="Parent,.5,350"
											   Horizontal="Center"  />
						</LayoutInput>
						<Children>
							<ts:TitleSet Name="TitleSet" Model="[SelectedItem]" ModelFast="[PreSelectedItem]" Layout="Scale" Font="font://f:CV_TitleFont" SubFont="font://f:CV_SubTitleFont"/>
							<mi:MovieInfo Name="MovieInfo" Model="[SelectedItem]" ModelFast="[PreSelectedItem]"
									DisplayGenres="false" DisplayDirector="false" DisplayWriter="false" DisplayMediaInfo="false" />
						</Children>
					</Panel>

					<!-- List Counter -->
					<Panel Name="ListCounterPosition" Layout="HorizontalFlow" >
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,.9" Bottom="Parent,1,-60"  />
						</LayoutInput>
						<Children>
							<Text Name="List_Counter" Content="0" Color="color://s:FontColorLight" Font="font://f:CV_CounterFont" />
							<Text Name="List_Total" Content="0" Color="color://s:FontColorLight" Font="font://f:CV_CounterFont" />
						</Children>
					</Panel>

					<!-- Coverflow Scroller -->
					<Scroller Orientation="Horizontal" FadeSize="-20" ScrollingData="[SD]" Navigation="RememberFocus" >
						<LayoutInput>
							<AnchorLayoutInput Horizontal="Fill" Top="Parent, 0.1" Bottom="Parent, 1, 200" />
						</LayoutInput>

						<Children>
							<Repeater Name="CoverRepeater" Source="[Item.Children]" Layout="[MyLayout]">

								<Content>
									<me:CoverflowItem
											  Application="[Application]"
											  RootItem="[Item]"
											  ItemIndex="[RepeatedItemIndex]"
											  Item="[RepeatedItem!lib:Item]"
											  SelectRepeaterIndex="[SelectRepeaterIndex]"
											  ImageSize="[Item.ActualThumbSize]"/>
								</Content>

								<Animations>
									<Animation Type="Move">
										<Keyframes>
											<PositionKeyframe Time="0" RelativeTo="Current"/>
											<PositionKeyframe Time="0.3" RelativeTo="Final"/>
										</Keyframes>
									</Animation>
								</Animations>
							</Repeater>

						</Children>
					</Scroller>


					<ColorFill Content="White" Alpha="0.1">
						<LayoutInput>
							<FormLayoutInput Left="Parent,.0" Top="Parent,0.5" Bottom="Parent,1" Right="Parent,1"/>
						</LayoutInput>
					</ColorFill>

				</Children>
			</Panel>
		</Content>
	</UI>



	<UI Name="CoverflowItem">
		<Properties>
			<a:Application Name="Application" Application="$Required"/>
			<lib:SizeRef Name="ImageSize" SizeRef="$Required"/>
			<Image Name="FocusImage" Image="image://i:ZoomPane"/>
			<Image Name="FolderImage" Image="image://i:Folder"/>
			<Image Name="BlankImage" Image="null"/>

			<lib:Item Name="Item" Item="$Required"/>
			<Image Name="Image" />
			<cor:Int32 Name="AnimDelay" Int32="1000" />
			<lib:Item Name="RootItem" Item="$Required"/>
			<Index Name="ItemIndex" Index="$Required"/>

			<Rotation Name="LRotate" Rotation="60deg;0,1,0"/>
			<Rotation Name="RRotate" Rotation="-60deg;0,1,0"/>
			<IntRangedValue Name="SelectRepeaterIndex" IntRangedValue="$Required"/>

		</Properties>

		<Locals>
			<ClickHandler Name="Clicker"/>
			<Timer Name="AnimTimer" Interval="[AnimDelay]" Enabled="false" AutoRepeat="false"/>
			<BooleanChoice Name="InFocus" Value="false" />
			<ShortcutHandler Name="ClearBtn" Handle="true" Shortcut="Clear" HandlerStage="Bubbled" />
			<ShortcutHandler Name="PlayBtn" Handle="true" Shortcut="Play" HandlerStage="Bubbled"/>
			<ShortcutHandler Name="RecordBtn" Handle="true" Shortcut="Record" HandlerStage="Bubbled"/>
		</Locals>
		<Rules>
			<Binding Source="[Item.Metadata.PreferredImage.SmallImage]" Target="[g1.Content]" />
			<Binding Source="[Item.Metadata.PreferredImage.SmallImage]" Target="[g2.Content]" />
			<Binding Source="[ImageSize.Value]" Target="[Item.Metadata.PreferredImage.SmallSize]" />

			<Binding Source="[ImageSize.Value]" Target="[ConstraintPanel1.MaximumSize]" />
			<Binding Source="[ImageSize.Value]" Target="[ConstraintPanel1.MinimumSize]" />
			<Binding Source="[ImageSize.Value]" Target="[ConstraintPanel2.MaximumSize]" />
			<Binding Source="[ImageSize.Value]" Target="[ConstraintPanel2.MinimumSize]" />
			
			<!-- Set the UI to be mouse and keyboard interactive. -->
			<Default Target="[Input.KeyInteractive]" Value="true"/>
			<Rule>
				<Conditions>
					<Modified Source="[ClearBtn.Invoked]"/>
				</Conditions>
				<Actions>
					<PlaySound Sound="res://ehres!MiniSelect_a.wav" />
					<Invoke Target="[Item.ToggleWatched]"/>
				</Actions>
			</Rule>

			<Binding Source="[ImageSize.Value]" Target="[Item.Metadata.PreferredImage.SmallSize]" />
			<Rule>
				<Conditions>
					<Modified Source="[PlayBtn.Invoked]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[Application.Play]" item="[Item]"/>
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Modified Source="[RecordBtn.Invoked]"/>
				</Conditions>
				<Actions>
					<PlaySound Sound="res://ehres!MiniSelect_a.wav" />
					<Invoke Target="[Item.RefreshMetadata]"/>
				</Actions>
			</Rule>

			<Changed Source="[Clicker.Invoked]">
				<Actions>
					<Invoke Target="[Application.Navigate]" item="[Item]"/>
					<PlaySound Sound="res://ehres!MiniSelect_a.wav" />
				</Actions>
			</Changed>

			<Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>

      <Default Target="[Label.Visible]" Value="true">
        <Conditions>
          <Equality Source="[Item.Metadata.HasPreferredImage]" ConditionOp="Equals" Value="false" />
          <!--<Equality Source="[ShowLabels.Value]" ConditionOp="Equals" Value="false" />-->
        </Conditions>
      </Default>
      
			<!-- Selected state, true if item last had focus -->
			<Condition Source="[RootItem.SelectedChildIndex]" ConditionOp="Equals" SourceValue="[ItemIndex.SourceValue]">
				<Actions>
					<Set Target="[Main.Scale]" Value="1.2,1.2,1"/>
					<Set Target="[Main.Rotation]" Value="0deg;0,1,0" />
					<Set Target="[SelectRepeaterIndex.Value]" Value="[ItemIndex.Value]"/>
					<Set Target="[FocusBg.Content]" Value="[FocusImage]" />
          <Set Target="[ConstraintPanel1.ColorFilter]" Value="White" />
        </Actions>
			</Condition>

			<!-- Focus and non-focused states. -->
			<Condition Source="[Input.KeyFocus]" ConditionOp="Equals" SourceValue="true">
				<Actions>
					<Set Target="[RootItem.SelectedChildIndex]" Value="[ItemIndex.SourceValue]" />
				</Actions>
			</Condition>
			<Condition Source="[Input.KeyFocus]" ConditionOp="Equals" SourceValue="false">
				<Actions>
					<Set Target="[Main.Scale]" Value="1,1,1"/>
				</Actions>
			</Condition>

			<!-- Set proper rotation. -->
			<Changed Source="[SelectRepeaterIndex.Value]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[SelectRepeaterIndex.Value]" ConditionOp="GreaterThan" Value="[ItemIndex.Value]" />
				</Conditions>
				<Actions>
					<Set Target="[Main.Rotation]" Value="[RRotate]" />
				</Actions>
			</Changed>

		</Rules>

		<Content>
			<Graphic Name="Main" Content="[BlankImage]" CenterPointPercent="0.5,0.5,0.5" Rotation="[LRotate]" >
				<Layout>
					<FlowLayout Orientation="Vertical" ItemAlignment="Center" Spacing="0,-5"/>
				</Layout>
				<Children>
					<!-- Focus Outline-->
					<Graphic Name="FocusBg" Content="[BlankImage]" Padding="5,5,5,5" SizingPolicy="SizeToChildren">
						<Children>
							<Panel Name="ConstraintPanel1" CenterPointPercent="0.5,0.5,0.5" Padding="0,0,0,0" MaximumSize="[ImageSize.Value]" 
                     MinimumSize="[ImageSize.Value]" ColorFilter="150,150,150" >
								<Layout>
                  <FlowLayout Orientation="Vertical" StripAlignment="Far"/>
								</Layout>
								<Children>
									<Graphic Name="g1" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true">
										<Children>
											<Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center">
												<LayoutInput>
													<AnchorLayoutInput Horizontal="Fill" Vertical="Fill"/>
												</LayoutInput>
												<Children>
													<Text Alpha="1" Name="Label" Visible="false" Color="color://s:FontColorLight"
														Content="[Item.Metadata.Name]"  WordWrap="true" Margins="5,5,5,5"  HorizontalAlignment="Center">
													</Text>
												</Children>
											</Panel>
										</Children>
									</Graphic>
								</Children>
							</Panel>
						</Children>
					</Graphic>

					<Clip FadeAmount="1" FadeSize="50" NearOffset="100" Orientation="Vertical" ShowFar="false" Margins="0,-10,0,0">
						<Children>
							<Panel Name="ConstraintPanel2" Padding="0,0,0,0" ColorFilter="150,150,150" CenterPointPercent="0.5,0.5,0.5" Rotation="180deg;1,0,0">
								<Layout>
                  <FlowLayout Orientation="Vertical" StripAlignment="Far"/>
								</Layout>
								<Children>
									<Graphic Name="g2" ColorFilter="64,64,64" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true" >
									</Graphic>
								</Children>
							</Panel>
						</Children>
					</Clip>
				</Children>

				<Animations>
					<Animation Type="Scale" CenterPointPercent="0.5,0.5,0.5">
						<Keyframes>
							<ScaleKeyframe Time="0" RelativeTo="Current" Interpolation="SCurve"/>
							<ScaleKeyframe Time=".35" RelativeTo="Final" Interpolation="SCurve"/>
						</Keyframes>
					</Animation>
					<Animation Type="Rotate">
						<Keyframes>
							<RotateKeyframe RelativeTo="Current" Time="0" Value="0deg;0,1,0" Interpolation="EaseIn"/>
							<RotateKeyframe RelativeTo="Final" Time="0.25" Value="0deg;0,1,0" />
						</Keyframes>
					</Animation>
				</Animations>
			</Graphic>
		</Content>
	</UI>

</Mcml>
