<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:cor="assembly://MSCorLib/System"
	  xmlns:a="assembly://MediaBrowser/MediaBrowser"
	  xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
    xmlns:pp="resx://MediaBrowser/MediaBrowser.Resources/PopupPlay"
	  >

  <UI Name="ItemButton">
    <Properties>
      <lib:Item Name="Item" Item="$Required"/>
      <a:Application Name="Application" Application="$Required"/>
    </Properties>

    <Locals>
      <ClickHandler Name="Clicker"/>
      
      <ShortcutHandler Name="ClearBtn" Handle="true" Shortcut="Clear" HandlerStage="Bubbled" />
      <KeyHandler Name="WatchedShortcut" Handle="true" Key="W" Modifiers="Control" HandlerStage="Bubbled"/>
      
      <ShortcutHandler Name="PlayBtn" Handle="true" Shortcut="Play" HandlerStage="Bubbled"/>
      <KeyHandler Name="PlayShortcut" Handle="true" HandlerStage="Bubbled" Key="P" Modifiers="Control"/>
      <Command Name="PlayCommand"/>

      <ShortcutHandler Name="RecordBtn" Handle="true" Shortcut="Record" HandlerStage="Bubbled"/>
      <KeyHandler Name="RefreshShortcut" Handle="true" Key="R" Modifiers="Control" HandlerStage="Bubbled"/>
    </Locals>

    <Rules>
      <!-- Watched Toggle Commands -->
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Modified Source="[ClearBtn.Invoked]"/>
          <Modified Source="[WatchedShortcut.Invoked]"/>
        </Conditions>
        <Actions>
          <PlaySound Sound="res://ehres!MiniSelect_a.wav" />
          <Invoke Target="[Item.ToggleWatched]"/>
        </Actions>
      </Rule>

      <!-- Refresh Toggle Commands -->
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Modified Source="[RecordBtn.Invoked]"/>
          <Modified Source="[RefreshShortcut.Invoked]"/>
        </Conditions>
        <Actions>
          <PlaySound Sound="res://ehres!MiniSelect_a.wav" />
          <Invoke Target="[Item.RefreshMetadata]"/>
        </Actions>
      </Rule>

      <Changed Source="[Clicker.Invoked]">
        <Actions>
          <Invoke Target="[Application.Navigate]" item="[Item]"/>
          <PlaySound Sound="res://ehres!MiniSelect_a.wav" />
        </Actions>
      </Changed>

      <!-- Popup Rules -->
      <Rule ConditionLogicalOp ="Or">
        <Conditions>
          <Modified Source="[PlayBtn.Invoked]"/>
          <Modified Source="[PlayShortcut.Invoked]"/>
        </Conditions>
        <Actions>
          <Set Target="[Application.DisplayPopupPlay]" Value="true" />          
        </Actions>
      </Rule>

      <!--<Changed Source="[PlayCommand.Invoked]">
        <Conditions>
          <Equality Source="[Item.SupportsMultiPlay]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[PopupPlay.Visible]" Value="true" />
          <Invoke Target="[PopupPlay.NavigateInto]" />
        </Actions>
      </Changed>-->

      <!--<Changed Source="[PlayCommand.Invoked]">
        <Conditions>
          <Equality Source="[Item.SupportsMultiPlay]" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[Application.Play]" item="[Item]"/>
        </Actions>
      </Changed>-->
      
      <!--<Changed Source="[ClosePopupPlay.Invoked]">
        <Actions>
          <PlaySound Sound="res://ehres!MiniSelect_a.wav" />
          <Set Target="[PopupPlay.Visible]" Value="false"/>
          <Invoke Target="[BasePanel.NavigateInto]" />
        </Actions>
      </Changed>-->

    </Rules>
  
  </UI>
</Mcml>
